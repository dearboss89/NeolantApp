<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Client.Domain</name>
    </assembly>
    <members>
        <member name="T:Client.Domain.Contracts.AccessTokenService.IAccessTokenService">
            <summary>
            Сервис работы с токеном доступа
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.AccessTokenService.IAccessTokenService.GetAccessTokenAsync">
            <summary>
            Метод получения токена
            </summary>
            <returns>Тип токена авторизации</returns>
        </member>
        <member name="M:Client.Domain.Contracts.AccessTokenService.IAccessTokenService.IsTokenValid(Client.Domain.Models.Autorization.AccessToken)">
            <summary>
            Метод проверки валидности токена
            </summary>
            <param name="accessToken">Объект токена</param>
            <returns>состояние токена</returns>
        </member>
        <member name="T:Client.Domain.Contracts.Autorization.INeosyntezAutorizationParameter">
            <summary>
            Интерфейс описывающий параметры для авторизации в Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.Autorization.INeosyntezAutorizationParameter.ClientName">
            <summary>
            Имя клиента
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.Autorization.INeosyntezAutorizationParameter.Secret">
            <summary>
            Секрет пользователя
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.Autorization.INeosyntezAutorizationParameter.UserName">
            <summary>
            Имя пользователя
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.Autorization.INeosyntezAutorizationParameter.UserPassword">
            <summary>
            Пароль пользователя
            </summary>
        </member>
        <member name="T:Client.Domain.Contracts.Handlers.INeosyntezErrorHandler">
            <summary>
            Описание обработчика ошибок из Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.Handlers.INeosyntezErrorHandler.GetNeosyntezHttpException(System.Net.HttpStatusCode,System.String,System.String)">
            <summary>
            Метод возвращающий ошибку произошедшую при обращении к экземпляру Неосинтез
            </summary>
            <param name="httpStatusCode">Код состояния http</param>
            <param name="request">Запрос с которым происходило обращение</param>
            <param name="response">Сообщение об ошибке возвращенное сервером</param>
            <returns>NeosyntezHttpException объект ошибки от Неосинтез</returns>
        </member>
        <member name="T:Client.Domain.Contracts.HttpConfiguration.IHttpConfiguration">
            <summary>
            Интерфейс конфигурации HttpClient
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.HttpConfiguration.IHttpConfiguration.BaseAddress">
            <summary>
            Адрес Неосинтез
            </summary>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork">
            <summary>
            Единица работы сервисов для взаимодействия с API Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.AttributeStructure">
            <summary>
            Сервис взаимодействия с API структуры атрибутов Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.ObjectCollections">
            <summary>
            Сервис взаимодействия с API коллекций объектов
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.ObjectSearchApi">
            <summary>
            Сервис взаимодействия с API поиска в Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.ObjectWorkApi">
            <summary>
            Сервис взаимодействия с API объектов в Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.StructureApi">
            <summary>
            Сервис взаимодействия с API структуры метаданных Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.ModelsElementApi">
            <summary>
            Сервис взаимодействия с API с моделями в Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.ContentApiService">
            <summary>
            Сервис взаимодействия с API загрузки файлов
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.ElementsApiService">
            <summary>
            Сервис взаимодействия с API элементов моделей
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.RolesService">
            <summary>
            Сервис взаимодействия с ролями
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.SecurityUserService">
            <summary>
            Сервис взаимодействия с методами работы с пользователем
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeoSyntezApi.IApiServiceUnitOfWork.PrincipalsApiService">
            <summary>
            Сервис взаимодействия с методами работы с principals
            </summary>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService">
            <summary>
            Интерфейс описание сервиса работы со структурой атрибутов 
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.CreateNewNeosyntezAttributeAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод добавления атрибута
            </summary>
            <param name="neosyntezAttribute">Модель атрибута для добавления в Неосинтез</param>
            <returns>Добавленный атрибут</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.ChangeNeosyntezAttributeAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод изменения атрибута в Неосинтез
            </summary>
            <param name="neosyntezAttribute">Модель атрибута для добавления в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.GetAttributeTypesAsync">
            <summary>
            Асинхронный метод получения всех типов атрибутов зарегистрированных в данном экземпляре Неосинтез
            </summary>
            <returns>Список типов атрибутов</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.GetAttributeGroupsAsync">
            <summary>
            Асинхронный метод получения всех групп в экземпляре Неосинтез
            </summary>
            <returns>Список групп в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.CreateNewGroupAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezGroup)">
            <summary>
            Асинхронный метод создания групп в экземпляре Неосинтез
            </summary>
            <param name="neosyntezGroup">Модель группы для добавления в Неосинтез</param>
            <returns>Группа зарегистрированная в неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.DeleteGroupsAsync(System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezGroup})">
            <summary>
            Асинхронный метод удаления групп из экземпляра Неосинтез
            </summary>
            <param name="neosyntezGroups">Коллекция групп в Неосинтез для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.ChangeGroupAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezGroup)">
            <summary>
            Асинхронный метод изменения данных описания группы
            </summary>
            <param name="neosyntezGroup">Модель группы в Неосинтез для изменения</param>
            <returns>Измененная группа в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.GetUnitsAsync">
            <summary>
            Асинхронный метод получения всех единиц измерения в экземпляре Неосинтез
            </summary>
            <returns>Коллекция единиц измерения зарегистрированных на данном экземпляре Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.CreateNewUnitsAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezUnit)">
            <summary>
            Асинхронный метод добавления новых единиц измерения в экземпляр Неосинтез
            </summary>
            <param name="unit">Модель единицы измерения для добавления в Неосинтез</param>
            <returns>Добавленная в неосинтез единица измерения</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.DeleteUnitsAsync(System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezUnit})">
            <summary>
            Асинхронный метод удаления единиц измерения
            </summary>
            <param name="units">Коллекция единиц измерения для удаления из Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.ChangeUnitAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezUnit)">
            <summary>
            Асинхронный метод изменения записи единицы измерения
            </summary>
            <param name="unit">Модель единицы измерения для удаления из Неосинтез</param>
            <returns></returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.DeleteAttributesAsync(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Асинхронный метод удаление атрибутов из Неосинтез
            </summary>
            <param name="guids">Коллекция Id атрибутов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IAttributeStructureApiService.GetAttributesAsync">
            <summary>
            Асинхронный метод получения всех атрибутов экземпляра Неосинтез
            </summary>
            <returns>Массив атрибутов в JSON</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.IContentApiService">
            <summary>
            Сервис взаимодействия с API загрузки файлов
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.GetPreviewAsync(System.Guid)">
            <summary>
            Асинхронный метод получения preview
            </summary>
            <param name="contentId">Идентификатор файла</param>
            <returns>Объект бинарных данных</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.GetPreview(System.Guid)">
            <summary>
            Метод получения preview
            </summary>
            <param name="contentId">Идентификатор файла</param>
            <returns>Объект бинарных данных</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.GetAsync(System.Guid)">
            <summary>
            Асинхронный метод получения контента
            </summary>
            <param name="contentId">Идентификатор контента</param>
            <returns>Контент Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.Get(System.Guid)">
            <summary>
            Метод получения контента
            </summary>
            <param name="contentId">Идентификатор контента</param>
            <returns>Контент Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.DeleteAsync(System.Guid)">
            <summary>
            Асинхронный метод удаления контента
            </summary>
            <param name="contentId">Идентификатор контента</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.Delete(System.Guid)">
            <summary>
            Метод удаления контента
            </summary>
            <param name="contentId">Идентификатор контента</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.CreateAsync(Client.Domain.Contracts.WebApi.IBinaryFileObject)">
            <summary>
            Асинхронный метод создания контента Неосинтез
            </summary>
            <param name="content">Контент Неосинтез</param>
            <returns>Модель описание контента Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IContentApiService.Create(Client.Domain.Contracts.WebApi.IBinaryFileObject)">
            <summary>
            Метод создания контента Неосинтез
            </summary>
            <param name="content">Контент Неосинтез</param>
            <returns>Модель описание контента Неосинтез</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService">
            <summary>
            Интерфейс описание сервиса работы с элементами моделей "models/elements"
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.CreateTaskAsync(Client.Domain.Models.WorkObjects.Objects.AutoLinkingMapping)">
            <summary>
            Создать задачу автосвязывания элементов и объектов "/api/models/elements/links/auto"
            </summary>
            <param name="mappingModel"></param>
            <returns>Объект с идентификатором задачи</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.GetLinkReportAsync(System.Guid)">
            <summary>
            Получить отчет с результатами автосвязывания "/api/models/elements/links/auto/{id}"
            </summary>
            <param name="guid">Идентификатор задачи</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.StartAutoLinkTaskAsync(System.Guid)">
            <summary>
            Запустить задачу автосвязывания "/api/models/elements/links/auto/{id}"
            </summary>
            <param name="guid">Идентификатор задачи</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.CancelLinkTaskAsync(System.Guid)">
            <summary>
            Отмена и удаление задачи автосвязывания "/api/models/elements/links/auto/{id}"
            </summary>
            <param name="guid">Идентификатор задачи</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.GetElementsAttributesAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Получение коллекции атрибутов элементов моделей "/api/models/elements/attributes"
            </summary>
            <param name="modelIds">Список моделей</param>
            <returns>Коллекция атрибутов элементов модели</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.CreateLinksAsync(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Создание связей между элементами 3d и объектами системы.
            </summary>
            <param name="elementIds">Коллекция элементов модели, которые должны быть связаны</param>
            <param name="objectsIds">Коллекция объектов с которыми связываются элементы модели</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.GetLinksAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Получение связей между элементами 3d и объектами системы.
            </summary>
            <param name="ids">Список идентификаторов элементов 3d.</param>
            <returns>Контейнер описание связей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IElementsApiService.DeleteLinksAsync(System.Collections.Generic.IDictionary{System.Int64,System.Collections.Generic.IEnumerable{System.Guid}})">
            <summary>
            Удаление связей между элементами 3d и объектами системы.
            </summary>
            <param name="links">Словарь, в котором ключ - идентификатор элемента 3d, а значение - коллекция идентификаторов объектов системы.</param>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService">
            <summary>
            Сервис взаимодействия с моделями в API Неосинтеза
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.GetModelsAsync(Client.Domain.Models.WorkObjects.QueryObjects.ModelQueryObject)">
            <summary>
            Асинхронный метод получения Сhild-объектов объекта модели
            </summary>
            <param name="modelQuery">Объект запроса к Неосинтез, для получения данных о 3D модели</param>
            <returns>Коллекция Сhild-объектов заданного объекта модели </returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.GetNeosyntezFilesInfoAsync(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Асинхронный метод получения информации о файлах моделей Неосинтез
            </summary>
            <param name="queryObject">Объект запроса на получение информации о файле из Неосинтез</param>
            <returns>Коллекция описаний файлов для заданной модели Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.LinkModelsToFilesAsync(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.NeosyntezFileLinkObject})">
            <summary>
            Асинхронный метод связывания моделей и файлов в Неосинтез
            </summary>
            <param name="changedObject">Изменяемый объект</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.GetNeosyntezFileContentAsync(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Асинхронный метод получения контента файла заданной модели Неосинтез
            </summary>
            <param name="queryObject">Объект запроса контента из Неосинтез</param>
            <returns>Коллекция объектов контента файлов заданной модели</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.ChangeFileInfoAsync(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.NeosyntezFileObject})">
            <summary>
            Асинхронный метод изменения контента файла заданной модели Неосинтез
            </summary>
            <param name="changedObject">Изменяемый объект</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.GetModelFileAsync(Client.Domain.Models.WorkObjects.QueryObjects.BinaryQueryObject{System.Int64})">
            <summary>
            Асинхронный метод получения файлов заданной модели из Неосинтез
            </summary>
            <param name="queryObject">Объект запроса на получение файла</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.CreateNewModelAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezModel,System.Nullable{System.Int64})">
            <summary>
            Асинхронный метод создания новой модели в Неосинтез
            </summary>
            <param name="childObject">Объект создаваемой модели</param>
            <param name="parentId">Id родителя для создания модели</param>
            <returns>Созданная в Неосинтез модель</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.UploadModelFileAsync(System.Guid,Client.Domain.Contracts.WebApi.IBinaryFileObject)">
            <summary>
            Асинхронный метод загрузки файла в Неосинтез
            </summary>
            <param name="uploadId">Id объекта загрузки</param>
            <param name="file">Коллекция файлов для загрузки</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.ChangeModelAsync(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.NeosyntezModel})">
            <summary>
            Асинхронный метод изменения объекта модели
            </summary>
            <param name="changedObject">Изменяемый объект</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.DeleteModelAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Асинхронный метод удаления объекта модели из Неосинтез
            </summary>
            <param name="ids">Коллекция id объектов для удаления</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.GetModelTypesAsync">
            <summary>
            Асинхронный метод получения типов моделей определенных в экземпляре Неосинтез
            </summary>
            <returns>Коллекция типов объектов моделей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.CreateNewModelTypeAsync(Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64})">
            <summary>
            Асинхронный метод создания нового типа модели в Неосинтез
            </summary>
            <param name="type">Объект типа модели</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.DeleteModelTypeAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Асинхронный метод удаления типа объекта модели
            </summary>
            <param name="ids">Коллекция Id типов объектов модели</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.ChangeModelTypeAsync(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64}})">
            <summary>
            Асинхронный метод изменения типа объекта модели в Неосинтез
            </summary>
            <param name="changedObject">Изменяемый объект</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.CreateNewUploadAsync(Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64})">
            <summary>
            Асинхронный метод создания объекта загрузки описывающего процесс добавления файлов в Неосинтез
            </summary>
            <param name="neosyntezObject">Объект модели к которой необходимо добавить файлы (В объекте модели достаточно заполнить Id, Name, Description)</param>
            <returns>Объект загрузки из Неосинтез(объект описание процесса загрузки файлов)</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.FileLoadAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Objects.FileResponseObject})">
            <summary>
            Метод загрузки файла в модель Неосинтез
            </summary>
            <param name="uploadId">Id upload операции</param>
            <param name="responseObjects">Коллекция ответов о загрузке файлов</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.GetUploadObjectAsync">
            <summary>
            Асинхронный метод получений объекта загрузки из API Неосинтез
            </summary>
            <returns>Объект Неосинтез, описывающий загрузку файлов в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.DeleteUploadObjectAsync(Client.Domain.Models.WorkObjects.Objects.UploadObject)">
            <summary>
            Асинхронный метод удаления объекта загрузки
            </summary>
            <param name="uploadObject">Объект загрузки</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.DeleteFileInfoAsync(System.Collections.Generic.IDictionary{System.Int64,System.Int64})">
            <summary>
            Асинхронный метод удаления объектов описания файлов
            </summary>
            <param name="idCollection">Коллекция пар значений (Id модели Id файла) которые необходимо удалить</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IModelsApiService.GetElementsChildAsync(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Асинхронный метод получения элементов/элемента модели
            </summary>
            <param name="modelId">Идентификатор модели</param>
            <param name="elementId">Идентификатор элемента модели (опционально)</param>
            <returns>Коллекция элементов модели</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.ICollectionsApiService">
            <summary>
            Интерфейс описывающий работу с коллекциями в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ICollectionsApiService.GetCollectionAsync(System.Guid,System.Guid,System.Int32)">
            <summary>
            Получение коллекции объектов
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Асинхронный ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ICollectionsApiService.GetCollectionAsync(System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Получение коллекции объектов
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="skip">Параметр описывающий какое количество результатов необходимо пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Асинхронный ответ от Неосинтез в объекте JObject</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ICollectionsApiService.AddObjectAsync(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Добавление объекта в коллекцию
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="object">Объект добавляемый в коллекцию объектов</param>
            <returns>Асинхронный ответ от Неосинтез в объекте JObject</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ICollectionsApiService.AddLinkAsync(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Добавление ссылки на объект в коллекцию ссылок объекта
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkId">Id объекта для добавления в коллекцию ссылок</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ICollectionsApiService.AddLinkAsync(System.Guid,System.Guid,System.Guid)">
            <summary>
            Добавление ссылки на объект в коллекцию ссылок объекта
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkId">Id объекта для добавления в коллекцию ссылок</param>
            <returns>Асинхронный ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ICollectionsApiService.DeleteAsync(System.Guid,System.Guid)">
            <summary>
            Удаление элемента из коллекции ссылок или объектов
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.ISearchApiService">
            <summary>
            Интерфейс описывающий работу с поиском в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISearchApiService.SearchObjectByConditionsAsync(Client.Domain.Models.WorkObjects.Search.Criteria,System.Int32)">
            <summary>
            Метод поиска объекта по заданным фильтрам и условию
            </summary>
            <param name="searchObject">Объект поиска в Неосинтез</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISearchApiService.SearchObjectByConditionsAsync(Client.Domain.Models.WorkObjects.Search.Criteria,System.Int32,System.Int32)">
            <summary>
            Метод поиска объекта по заданным фильтрам и условию
            </summary>
            <param name="searchObject">Объект поиска в Неосинтез</param>
            <param name="skip">Количество элементов которое надо пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns></returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService">
            <summary>
            Интерфейс описывающий работу с объектом в API Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.GetObjectFromNeosyntezAsync(System.Guid)">
            <summary>
            Асинхронный метод получения объекта из Неосинтез
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <returns>Объект Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.CreateNewObjectAsync(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Асинхронный метод создания нового объекта в Неосинтез
            </summary>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.CreateNewObjectAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Асинхронный метод создания нового объекта в Неосинтез
            </summary>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.CreateNewObjectAsync(System.Guid,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Асинхронный метод создания нового объекта в Неосинтез
            </summary>
            <param name="parentId">Id родительского объекта для создаваемого объекта в Неосинтез</param>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.CreateNewObjectAsync(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Асинхронный метод создания нового объекта в Неосинтез
            </summary>
            <param name="parentId">Id родительского объекта для создаваемого объекта в Неосинтез</param>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.ChangeObjectAttributesAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод изменения атрибутов объекта в Неосинтез
            </summary>
            <param name="objectId">Id объекта, которому изменяются атрибуты, в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов объекта для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.DeleteObjectAsync(System.Guid)">
            <summary>
            Асинхронный метод удаления объектов из Неосинтез
            </summary>
            <param name="objectId">Id удаляемого объекта</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.ChangeParentObjectAsync(System.Guid,System.Guid)">
            <summary>
            Асинхронный метод смены родительского объекта (смена наименования объекту)
            </summary>
            <param name="parentId">Id родительского объекта в Неосинтез</param>
            <param name="objectId">Id объекта у которого будет производится смена родителя</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.ChangeObjectClassAsync(System.Guid,System.Guid)">
            <summary>
            Асинхронный метод смены класса у объекта
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="classId">Id класса на который производится замена</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.ChangeObjectNameAsync(System.Guid,System.String)">
            <summary>
            Асинхронный метод смены имени объекта
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="name">Новое имя объекта</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.GetChildObjectsAsync(System.Guid)">
            <summary>
            Асинхронный метод получения всех элементов от родительского объекта
            </summary>
            <param name="objectId">Id объекта, для которого производится операция</param>
            <returns>Массив дочерних элементов объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.GetChildObjectsAsync(System.Guid,System.Guid)">
            <summary>
            Асинхронный метод получения всех элементов от родительского объекта до определенного узла
            </summary>
            <param name="objectId">Id объекта, для которого производится операция</param>
            <param name="leafId">Id объекта до которого следует проводить выборку</param>
            <returns>Массив дочерних элементов объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.ContextSearchAsync(System.Guid,Client.Domain.Models.WorkObjects.Search.Criteria,System.Int32,System.Int32)">
            <summary>
            Асинхронный метод контекстного поиска
            </summary>
            <param name="objectId">Идентификатор объекта для контекстного поиска</param>
            <param name="criteria">Запрос для поиска</param>
            <param name="skip">Количество пропускаемых элементов</param>
            <param name="take">Количество получаемых элементов</param>
            <returns>Результат поиска в json</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.GetObjectPermissionsAsync(System.Guid)">
            <summary>
            Асинхронный метод получения информации о защите доступа к объекту, его разрешениях
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <returns>Объект разрешений</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.ChangeObjectPermissionsAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.PermissionManagementOperation})">
            <summary>
            Асинхронный метод изменения разрешений на доступ к объекту
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="operation">Объект описание операции изменения разрешений объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.GetObjectVersionsAsync(System.Guid,System.Int32,System.Int32)">
            <summary>
            Асинхронный метод получения всех версий объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="skip">Количество пропускаемых элементов</param>
            <param name="take">Количество получаемых элементов</param>
            <returns>Все версии объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.GetObjectVersionAsync(System.Guid,System.Int32)">
            <summary>
            Асинхронный метод получения объекта конкретной версии
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="version">Номер версии объекта</param>
            <returns>Конкретная версия объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IObjectApiService.MakeObjectVersionAsync(System.Guid)">
            <summary>
            Асинхронный метод создания  новой версии объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService">
            <summary>
            Интерфейс описывающий работу со структурой объектов Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.GetObjectTypesAsync">
            <summary>
            Метод получения типов данных из Неосинтез
            </summary>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.GetStructureEntitiesAsync">
            <summary>
            Метод получения информации о классах и атрибутах
            </summary>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.CreareNewEntityAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Метод заведения нового класса в Неосинтез
            </summary>
            <param name="neosyntezClass">Объект класса для заведения в Неосинтез</param>
            <returns>Объект заведенного класса в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.ChangeEntityAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Метод изменения существующего класса
            </summary>
            <param name="neosyntezClass">Объект класса с измененными параметрами</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.ChangeEntityParentAsync(System.Guid,System.Guid)">
            <summary>
            Метод изменения родителя существующего класса
            </summary>
            <param name="classId"></param>
            <param name="parentId"></param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.AddAttributeAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод добавления атрибутов классу в Неосинтез
            </summary>
            <param name="classId">Id класса в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.AddAttributeAsync(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод добавления атрибута классу в Неосинтез
            </summary>
            <param name="classId">Id класса в Неосинтез</param>
            <param name="attribute">Атрибут в Неосинтез</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.DeleteAttributesAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод удаления атрибута из класса
            </summary>
            <param name="classId">Id объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.DeleteEntitiesAsync(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Асинхронный метод удаления классов из Неосинтез
            </summary>
            <param name="neosyntezClasses">Коллекция Id классов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.ChangeAttributeValidationAsync(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод изменения параметров валидации для атрибута класса
            </summary>
            <param name="classId">Id класса в Неосинтез</param>
            <param name="attributeId">Id атрибута в Неосинтез изменение правила валидации которого надо произвести</param>
            <param name="neosyntezAttribute">Атрибут в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.ChangeClassViewerAsync(System.Guid,Client.Domain.Models.WorkObjects.Objects.Viewer)">
            <summary>
            Метод изменения вьювера конкретного класса "/api/structure/entities/{id}/viewers"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewer">Вьювер изменение которого необходимо произвести</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.AddNewViewerAsync(System.Guid,Client.Domain.Models.WorkObjects.Objects.Viewer)">
            <summary>
            Метод добавление нового вьювера заданному классу "/api/structure/entities/{id}/viewers"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewer">Вьювер, добавление которого необходимо произвести</param>
            <returns>Добавленный вьювер</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.DeleteViewerAsync(System.Guid,Client.Domain.Models.WorkObjects.Objects.Viewer)">
            <summary>
            Метод удаления вьювера для заданного класса "/api/structure/entities/{id}/viewers/{viewerId}"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewer">Вьювер, удаление которого необходимо произвести</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.ChangeViewersOrderAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Метод изменения порядка вьюверов у заданного класса "/api/structure/entities/{id}/viewers/order"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="order">Порядок вьюверов в заданном классе</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.ChangeViewerAttributesAsync(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Метод изменения атрибутов вьювера заданного класса "/api/structure/entities/{id}/viewers/{viewerId}/attributes"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewerId">Идентификатор вьювера</param>
            <param name="ids">Коллекция идентификаторов атрибутов</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.DeleteViewerAttributesAsync(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Метод удаления атрибутов из вьювера заданного класса "/api/structure/entities/{id}/viewers/{viewerId}/attributes"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewerId">Идентификатор вьювера</param>
            <param name="ids">Коллекция идентификаторов атрибутов</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.IStructureApiService.ChangeViewerAttributesOrderAsync(System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Метод изменения порядка атрибутов в конкретном вьювере заданного класса
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewerId">Идентификатор вьювера</param>
            <param name="order">Порядок размещения</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IPrincipalsApiService.GetPrincipalsAsync">
            <summary>
            Метод получения списка Principal
            </summary>
            <returns>Список Principal в экземпляре Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IRolesUserApiService.GetRolesAsync">
            <summary>
            Асинхронный метод получения списка ролей
            </summary>
            <returns>Коллекция ролей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IRolesUserApiService.GetEffectivePermissionsAsync(System.Int32)">
            <summary>
            Асинхронный метод получения разрешений
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IRolesUserApiService.GetUsersFromRoleAsync(System.Int32)">
            <summary>
            Асинхронный метод получения пользователей относящихся к определённой роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IRolesUserApiService.AddRoleAsync(Client.Domain.Models.NeosyntezObjects.Security.Role)">
            <summary>
            Асинхронный метод добавления роли
            </summary>
            <param name="role">Роль для добавления</param>
            <returns>Добавленная роль</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IRolesUserApiService.AddUsersToRoleAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Асинхронный метод добавления пользователей к роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IRolesUserApiService.DeleteRoleAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Асинхронный метод удаления ролей 
            </summary>
            <param name="ids">Коллекция идентификаторов ролей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IRolesUserApiService.DeleteUsersFromRoleAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Асинхронный метод удаления пользователей из роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="T:Client.Domain.Contracts.NeoSyntezApi.Security.IUserApiService">
            <summary>
            Интерфейс взаимодействия с API 
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IUserApiService.GetUserInfoAsync">
            <summary>
            Асинхронный метод получения информации о текущем пользователе
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IUserApiService.GetProfileAsync(System.Int32)">
            <summary>
            Асинхронный метод получения профиля пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Профиль пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IUserApiService.GetPermissionsAsync(System.Int32)">
            <summary>
            Асинхронный метод получения коллекции разрешений пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IUserApiService.GetRolesAsync(System.Int32)">
            <summary>
            Асинхронный метод получения ролей пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция ролей пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.IUserApiService.GetUsersAsync">
            <summary>
            Асинхронный метод получения коллекции пользователей экземпляра
            </summary>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncPrincipalsApiService.GetPrincipals">
            <summary>
            Метод получения списка Principal
            </summary>
            <returns>Список Principal в экземпляре Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncRolesUserApiService.GetRoles">
            <summary>
            Метод получения списка ролей
            </summary>
            <returns>Коллекция ролей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncRolesUserApiService.GetEffectivePermissions(System.Int32)">
            <summary>
            Метод получения разрешений
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncRolesUserApiService.GetUsersFromRole(System.Int32)">
            <summary>
            Метод получения пользователей относящихся к определённой роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncRolesUserApiService.AddRole(Client.Domain.Models.NeosyntezObjects.Security.Role)">
            <summary>
            Метод добавления роли
            </summary>
            <param name="role">Роль для добавления</param>
            <returns>Добавленная роль</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncRolesUserApiService.AddUsersToRole(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Метод добавления пользователей к роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncRolesUserApiService.DeleteRole(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Метод удаления ролей 
            </summary>
            <param name="ids">Коллекция идентификаторов ролей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncRolesUserApiService.DeleteUsersFromRole(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Метод удаления пользователей из роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncUserApiService.GetUserInfo">
            <summary>
            Метод получения информации о текущем пользователе
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncUserApiService.GetProfile(System.Int32)">
            <summary>
            Метод получения профиля пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Профиль пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncUserApiService.GetPermissions(System.Int32)">
            <summary>
            Метод получения коллекции разрешений пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncUserApiService.GetRoles(System.Int32)">
            <summary>
            Метод получения ролей пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция ролей пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.Security.ISyncUserApiService.GetUsers">
            <summary>
            Метод получения коллекции пользователей экземпляра
            </summary>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.CreateNewNeosyntezAttribute(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод добавления атрибута
            </summary>
            <param name="neosyntezAttribute">Модель атрибута для добавления в Неосинтез</param>
            <returns>Добавленный атрибут</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.ChangeNeosyntezAttribute(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод изменения атрибута в Неосинтез
            </summary>
            <param name="neosyntezAttribute">Модель атрибута для добавления в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.GetAttributeTypes">
            <summary>
            Метод получения всех типов атрибутов зарегистрированных в данном экземпляре Неосинтез
            </summary>
            <returns>Список типов атрибутов</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.GetAttributeGroups">
            <summary>
            Метод получения всех групп в экземпляре Неосинтез
            </summary>
            <returns>Список групп в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.CreateNewGroup(Client.Domain.Models.NeosyntezObjects.NeosyntezGroup)">
            <summary>
            Метод создания групп в экземпляре Неосинтез
            </summary>
            <param name="neosyntezGroup">Модель группы для добавления в Неосинтез</param>
            <returns>Группа зарегистрированная в неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.DeleteGroups(System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezGroup})">
            <summary>
            Метод удаления групп из экземпляра Неосинтез
            </summary>
            <param name="neosyntezGroups">Коллекция групп в Неосинтез для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.ChangeGroup(Client.Domain.Models.NeosyntezObjects.NeosyntezGroup)">
            <summary>
            Метод изменения данных описания группы
            </summary>
            <param name="neosyntezGroup">Модель группы в Неосинтез для изменения</param>
            <returns>Измененная группа в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.GetUnits">
            <summary>
            Метод получения всех единиц измерения в экземпляре Неосинтез
            </summary>
            <returns>Коллекция единиц измерения зарегистрированных на данном экземпляре Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.CreateNewUnits(Client.Domain.Models.NeosyntezObjects.NeosyntezUnit)">
            <summary>
            Метод добавления новых единиц измерения в экземпляр Неосинтез
            </summary>
            <param name="unit">Модель единицы измерения для добавления в Неосинтез</param>
            <returns>Добавленная в неосинтез единица измерения</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.DeleteUnits(System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezUnit})">
            <summary>
            Метод удаления единиц измерения
            </summary>
            <param name="units">Коллекция единиц измерения для удаления из Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.ChangeUnit(Client.Domain.Models.NeosyntezObjects.NeosyntezUnit)">
            <summary>
            Метод изменения записи единицы измерения
            </summary>
            <param name="unit">Модель единицы измерения для удаления из Неосинтез</param>
            <returns></returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.DeleteAttributes(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Метод удаление атрибутов из Неосинтез
            </summary>
            <param name="guids">Коллекция Id атрибутов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncAttributeStructureApiService.GetAttributes">
            <summary>
            Метод получения всех атрибутов экземпляра Неосинтез
            </summary>
            <returns>Массив атрибутов в JSON</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncCollectionsApiService.GetCollection(System.Guid,System.Guid,System.Int32)">
            <summary>
            Получение коллекции объектов
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncCollectionsApiService.GetCollection(System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Получение коллекции объектов
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="skip">Параметр описывающий какое количество результатов необходимо пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Ответ от Неосинтез в объекте JObject</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncCollectionsApiService.AddObject(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Добавление объекта в коллекцию
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="object">Объект добавляемый в коллекцию объектов</param>
            <returns>Ответ от Неосинтез в объекте JObject</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncCollectionsApiService.AddLink(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Добавление ссылки на объект в коллекцию ссылок объекта
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkId">Id объекта для добавления в коллекцию ссылок</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncCollectionsApiService.AddLink(System.Guid,System.Guid,System.Guid)">
            <summary>
            Добавление ссылки на объект в коллекцию ссылок объекта
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkId">Id объекта для добавления в коллекцию ссылок</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncCollectionsApiService.Delete(System.Guid,System.Guid)">
            <summary>
            Удаление элемента из коллекции ссылок или объектов
            </summary>  
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncContentApiService.GetPreview(System.Guid)">
            <summary>
            Метод получения preview
            </summary>
            <param name="contentId">Идентификатор файла</param>
            <returns>Объект бинарных данных</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncContentApiService.Get(System.Guid)">
            <summary>
            Метод получения контента
            </summary>
            <param name="contentId">Идентификатор контента</param>
            <returns>Контент Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncContentApiService.Delete(System.Guid)">
            <summary>
            Метод удаления контента
            </summary>
            <param name="contentId">Идентификатор контента</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncContentApiService.Create(Client.Domain.Contracts.WebApi.IBinaryFileObject)">
            <summary>
            Метод создания контента Неосинтез
            </summary>
            <param name="content">Контент Неосинтез</param>
            <returns>Модель описание контента Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.CreateTask(Client.Domain.Models.WorkObjects.Objects.AutoLinkingMapping)">
            <summary>
            Создать задачу автосвязывания элементов и объектов "/api/models/elements/links/auto"
            </summary>
            <param name="mappingModel"></param>
            <returns>Объект с идентификатором задачи</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.GetLinkReport(System.Guid)">
            <summary>
            Получить отчет с результатами автосвязывания "/api/models/elements/links/auto/{id}"
            </summary>
            <param name="guid">Идентификатор задачи</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.StartAutoLinkTask(System.Guid)">
            <summary>
            Запустить задачу автосвязывания "/api/models/elements/links/auto/{id}"
            </summary>
            <param name="guid">Идентификатор задачи</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.CancelLinkTask(System.Guid)">
            <summary>
            Отмена и удаление задачи автосвязывания "/api/models/elements/links/auto/{id}"
            </summary>
            <param name="guid">Идентификатор задачи</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.GetElementsAttributes(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Получение коллекции атрибутов элементов моделей "/api/models/elements/attributes"
            </summary>
            <param name="modelIds">Список моделей</param>
            <returns>Коллекция атрибутов элементов модели</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.CreateLinks(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Создание связей между элементами 3d и объектами системы.
            </summary>
            <param name="elementIds">Коллекция элементов модели, которые должны быть связаны</param>
            <param name="objectsIds">Коллекция объектов с которыми связываются элементы модели</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.GetLinks(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Получение связей между элементами 3d и объектами системы.
            </summary>
            <param name="ids">Список идентификаторов элементов 3d.</param>
            <returns>Контейнер описание связей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncElementsApiService.DeleteLinks(System.Collections.Generic.IDictionary{System.Int64,System.Collections.Generic.IEnumerable{System.Guid}})">
            <summary>
            Удаление связей между элементами 3d и объектами системы.
            </summary>
            <param name="links">Словарь, в котором ключ - идентификатор элемента 3d, а значение - коллекция идентификаторов объектов системы.</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.GetModels(Client.Domain.Models.WorkObjects.QueryObjects.ModelQueryObject)">
            <summary>
            Метод получения Сhild-объектов объекта модели
            </summary>
            <param name="modelQuery">Объект запроса к Неосинтез, для получения данных о 3D модели</param>
            <returns>Коллекция Сhild-объектов заданного объекта модели </returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.GetNeosyntezFilesInfo(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Асинхронный метод получения информации о файлах моделей Неосинтез
            </summary>
            <param name="queryObject">Объект запроса на получение информации о файле из Неосинтез</param>
            <returns>Коллекция описаний файлов для заданной модели Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.LinkModelsToFiles(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.NeosyntezFileLinkObject})">
            <summary>
            Асинхронный метод связывания моделей и файлов в Неосинтез
            </summary>
            <param name="changedObject">Изменяемый объект</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.GetNeosyntezFileContent(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Асинхронный метод получения контента файла заданной модели Неосинтез
            </summary>
            <param name="queryObject">Объект запроса контента из Неосинтез</param>
            <returns>Коллекция объектов контента файлов заданной модели</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.ChangeFileInfo(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.NeosyntezFileObject})">
            <summary>
            Асинхронный метод изменения контента файла заданной модели Неосинтез
            </summary>
            <param name="changedObject">Изменяемый объект</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.GetModelFile(Client.Domain.Models.WorkObjects.QueryObjects.BinaryQueryObject{System.Int64})">
            <summary>
            Асинхронный метод получения файлов заданной модели из Неосинтез
            </summary>
            <param name="queryObject">Объект запроса на получение файла</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.CreateNewModel(Client.Domain.Models.NeosyntezObjects.NeosyntezModel,System.Nullable{System.Int64})">
            <summary>
            Асинхронный метод создания новой модели в Неосинтез
            </summary>
            <param name="childObject">Объект создаваемой модели</param>
            <param name="parentId">Id родителя для создания модели</param>
            <returns>Созданная в Неосинтез модель</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.UploadModelFile(System.Guid,Client.Domain.Contracts.WebApi.IBinaryFileObject)">
            <summary>
            Асинхронный метод загрузки файла в Неосинтез
            </summary>
            <param name="uploadId">Id объекта загрузки</param>
            <param name="file">Коллекция файлов для загрузки</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.ChangeModel(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.NeosyntezModel})">
            <summary>
            Асинхронный метод изменения объекта модели
            </summary>
            <param name="changedObject">Изменяемый объект</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.DeleteModel(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Асинхронный метод удаления объекта модели из Неосинтез
            </summary>
            <param name="ids">Коллекция id объектов для удаления</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.GetModelTypes">
            <summary>
            Асинхронный метод получения типов моделей определенных в экземпляре Неосинтез
            </summary>
            <returns>Коллекция типов объектов моделей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.CreateNewModelType(Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64})">
            <summary>
            Асинхронный метод создания нового типа модели в Неосинтез
            </summary>
            <param name="type">Объект типа модели</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.DeleteModelType(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Асинхронный метод удаления типа объекта модели
            </summary>
            <param name="ids">Коллекция Id типов объектов модели</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.ChangeModelType(Client.Domain.Models.WorkObjects.ChangedObject{System.Int64,Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64}})">
            <summary>
            Асинхронный метод изменения типа объекта модели в Неосинтез
            </summary>
            <param name="changedObject">Изменяемый объект</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.CreateNewUpload(Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64})">
            <summary>
            Асинхронный метод создания объекта загрузки описывающего процесс добавления файлов в Неосинтез
            </summary>
            <param name="neosyntezObject">Объект модели к которой необходимо добавить файлы (В объекте модели достаточно заполнить Id, Name, Description)</param>
            <returns>Объект загрузки из Неосинтез(объект описание процесса загрузки файлов)</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.FileLoad(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Objects.FileResponseObject})">
            <summary>
            Метод загрузки файла в модель Неосинтез
            </summary>
            <param name="uploadId">Id upload операции</param>
            <param name="responseObjects">Коллекция ответов о загрузке файлов</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.GetUploadObject">
            <summary>
            Асинхронный метод получений объекта загрузки из API Неосинтез
            </summary>
            <returns>Объект Неосинтез, описывающий загрузку файлов в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.DeleteUploadObject(Client.Domain.Models.WorkObjects.Objects.UploadObject)">
            <summary>
            Асинхронный метод удаления объекта загрузки
            </summary>
            <param name="uploadObject">Объект загрузки</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.DeleteFileInfo(System.Collections.Generic.IDictionary{System.Int64,System.Int64})">
            <summary>
            Асинхронный метод удаления объектов описания файлов
            </summary>
            <param name="idCollection">Коллекция пар значений (Id модели Id файла) которые необходимо удалить</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncModelsApiService.GetElementsChild(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Асинхронный метод получения элементов/элемента модели
            </summary>
            <param name="modelId">Идентификатор модели</param>
            <param name="elementId">Идентификатор элемента модели (опционально)</param>
            <returns>Коллекция элементов модели</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.GetObjectFromNeosyntez(System.Guid)">
            <summary>
            Метод получения объекта из Неосинтез
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <returns>Объект Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.CreateNewObject(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Метод создания нового объекта в Неосинтез
            </summary>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.CreateNewObject(Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Метод создания нового объекта в Неосинтез
            </summary>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.CreateNewObject(System.Guid,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Метод создания нового объекта в Неосинтез
            </summary>
            <param name="parentId">Id родительского объекта для создаваемого объекта в Неосинтез</param>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.CreateNewObject(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Метод создания нового объекта в Неосинтез
            </summary>
            <param name="parentId">Id родительского объекта для создаваемого объекта в Неосинтез</param>
            <param name="object">Объект для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.ChangeObjectAttributes(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод изменения атрибутов объекта в Неосинтез
            </summary>
            <param name="objectId">Id объекта, которому изменяются атрибуты, в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов объекта для добавления в Неосинтез</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.DeleteObject(System.Guid)">
            <summary>
            Метод удаления объектов из Неосинтез
            </summary>
            <param name="objectId">Id удаляемого объекта</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.ChangeParentObject(System.Guid,System.Guid)">
            <summary>
            Метод смены родительского объекта (смена наименования объекту)
            </summary>
            <param name="parentId">Id родительского объекта в Неосинтез</param>
            <param name="objectId">Id объекта у которого будет производится смена родителя</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.ChangeObjectClass(System.Guid,System.Guid)">
            <summary>
            Метод смены класса у объекта
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="classId">Id класса на который производится замена</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.ChangeObjectName(System.Guid,System.String)">
            <summary>
            Метод смены имени объекта
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="name">Новое имя объекта</param>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.GetChildObjects(System.Guid)">
            <summary>
            Метод получения всех элементов от родительского объекта
            </summary>
            <param name="objectId">Id объекта, для которого производится операция</param>
            <returns>Массив дочерних элементов объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.GetChildObjects(System.Guid,System.Guid)">
            <summary>
            Метод получения всех элементов от родительского объекта до определенного узла
            </summary>
            <param name="objectId">Id объекта, для которого производится операция</param>
            <param name="leafId">Id объекта до которого следует проводить выборку</param>
            <returns>Массив дочерних элементов объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.ContextSearch(System.Guid,Client.Domain.Models.WorkObjects.Search.Criteria,System.Int32,System.Int32)">
            <summary>
            Метод контекстного поиска
            </summary>
            <param name="objectId">Идентификатор объекта для контекстного поиска</param>
            <param name="criteria">Запрос для поиска</param>
            <param name="skip">Количество пропускаемых элементов</param>
            <param name="take">Количество получаемых элементов</param>
            <returns>Результат поиска в json</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.GetObjectPermissions(System.Guid)">
            <summary>
            Метод получения информации о защите доступа к объекту, его разрешениях
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <returns>Объект разрешений</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.ChangeObjectPermissions(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.PermissionManagementOperation})">
            <summary>
            Метод изменения разрешений на доступ к объекту
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="operation">Объект описание операции изменения разрешений объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.GetObjectVersions(System.Guid,System.Int32,System.Int32)">
            <summary>
            Метод получения всех версий объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="skip">Количество пропускаемых элементов</param>
            <param name="take">Количество получаемых элементов</param>
            <returns>Все версии объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.GetObjectVersion(System.Guid,System.Int32)">
            <summary>
            Метод получения объекта конкретной версии
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="version">Номер версии объекта</param>
            <returns>Конкретная версия объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncObjectApiService.MakeObjectVersion(System.Guid)">
            <summary>
            Метод создания  новой версии объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncSearchApiService.SearchObjectByConditions(Client.Domain.Models.WorkObjects.Search.Criteria,System.Int32)">
            <summary>
            Метод поиска объекта по заданным фильтрам и условию
            </summary>
            <param name="searchObject">Объект поиска в Неосинтез</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncSearchApiService.SearchObjectByConditions(Client.Domain.Models.WorkObjects.Search.Criteria,System.Int32,System.Int32)">
            <summary>
            Метод поиска объекта по заданным фильтрам и условию
            </summary>
            <param name="searchObject">Объект поиска в Неосинтез</param>
            <param name="skip">Количество элементов которое надо пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.GetObjectTypes">
            <summary>
            Метод получения типов данных из Неосинтез
            </summary>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.GetStructureEntities">
            <summary>
            Метод получения информации о классах и атрибутах
            </summary>
            <returns>Ответ от Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.CreareNewEntity(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Метод заведения нового класса в Неосинтез
            </summary>
            <param name="neosyntezClass">Объект класса для заведения в Неосинтез</param>
            <returns>Объект заведенного класса в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.ChangeEntity(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Метод изменения существующего класса
            </summary>
            <param name="neosyntezClass">Объект класса с измененными параметрами</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.ChangeEntityParent(System.Guid,System.Guid)">
            <summary>
            Метод изменения родителя существующего класса
            </summary>
            <param name="classId"></param>
            <param name="parentId"></param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.AddAttribute(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод добавления атрибутов классу в Неосинтез
            </summary>
            <param name="classId">Id класса в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.AddAttribute(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод добавления атрибута классу в Неосинтез
            </summary>
            <param name="classId">Id класса в Неосинтез</param>
            <param name="attribute">Атрибут в Неосинтез</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.DeleteAttributes(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод удаления атрибута из класса
            </summary>
            <param name="classId">Id объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.DeleteEntities(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Асинхронный метод удаления классов из Неосинтез
            </summary>
            <param name="neosyntezClasses">Коллекция Id классов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.ChangeAttributeValidation(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод изменения параметров валидации для атрибута класса
            </summary>
            <param name="classId">Id класса в Неосинтез</param>
            <param name="attributeId">Id атрибута в Неосинтез изменение правила валидации которого надо произвести</param>
            <param name="neosyntezAttribute">Атрибут в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.ChangeClassViewer(System.Guid,Client.Domain.Models.WorkObjects.Objects.Viewer)">
            <summary>
            Метод изменения вьювера конкретного класса "/api/structure/entities/{id}/viewers"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewer">Вьювер изменение которого необходимо произвести</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.AddNewViewer(System.Guid,Client.Domain.Models.WorkObjects.Objects.Viewer)">
            <summary>
            Метод добавление нового вьювера заданному классу "/api/structure/entities/{id}/viewers"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewer">Вьювер, добавление которого необходимо произвести</param>
            <returns>Добавленный вьювер</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.DeleteViewer(System.Guid,Client.Domain.Models.WorkObjects.Objects.Viewer)">
            <summary>
            Метод удаления вьювера для заданного класса "/api/structure/entities/{id}/viewers/{viewerId}"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewer">Вьювер, удаление которого необходимо произвести</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.ChangeViewersOrder(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Метод изменения порядка вьюверов у заданного класса "/api/structure/entities/{id}/viewers/order"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="order">Порядок вьюверов в заданном классе</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.ChangeViewerAttributes(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Метод изменения атрибутов вьювера заданного класса "/api/structure/entities/{id}/viewers/{viewerId}/attributes"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewerId">Идентификатор вьювера</param>
            <param name="ids">Коллекция идентификаторов атрибутов</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.DeleteViewerAttributes(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Метод удаления атрибутов из вьювера заданного класса "/api/structure/entities/{id}/viewers/{viewerId}/attributes"
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewerId">Идентификатор вьювера</param>
            <param name="ids">Коллекция идентификаторов атрибутов</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeoSyntezApi.ISyncStructureApiService.ChangeViewerAttributesOrder(System.Guid,System.Guid,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Метод изменения порядка атрибутов в конкретном вьювере заданного класса
            </summary>
            <param name="classId">Идентификатор класса</param>
            <param name="viewerId">Идентификатор вьювера</param>
            <param name="order">Порядок размещения</param>
            <returns></returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezConfiguration.INeosyntezConfiguration">
            <summary>
            Контракт конфигурации для подключения к Неосинтез
            </summary>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserModelService">
            <summary>
            Сервис работы с 3D моделями
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserModelService.UploadFilesAsync(Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64},System.Collections.Generic.IEnumerable{Client.Domain.Contracts.WebApi.IBinaryFileObject})">
            <summary>
            Асинхронный метод загрузки файлов моделей в Неосинтез
            </summary>
            <param name="neosyntezObject">Объект описание модели в которую будет производится загрузка файлов</param>
            <param name="files">Коллекция файлов для загрузки в модель Неосинтез</param>
            <returns>Коллекция результатов загрузки фалов в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка возникающая в результате проблемы взаимодействия с Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserModelService.GetModelByIdAsync(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Асинхронный метод получения объекта 3d модели из экземпляра Неосинтез
            </summary>
            <param name="queryObject">Объект запроса на получение модели из Неосинтез</param>
            <returns>Объект 3D модели Неосинтез или null в случае отсутствия</returns>
            <exception cref="T:System.ArgumentNullException">В случае передачи в параметре значения null или в случае не заполненного поля Id</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserModelService.IsModelExistAsync(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Асинхронный метод подтверждения существования модели в Неосинтез
            </summary>
            <param name="queryObject">Объект запроса модели из Неосинтез</param>
            <returns>Bool значение описывающее существование запрошеной модели</returns>
            <exception cref="T:System.ArgumentNullException">В случае передачи в параметре значения null или в случае не заполненного поля Id</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserModelService.GetElementsChildAsync(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Асинхронный метод получения элементов/элемента модели
            </summary>
            <param name="modelId">Идентификатор модели</param>
            <param name="elementId">Идентификатор элемента (опционально)</param>
            <returns>Коллекция элементов модели</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService">
            <summary>
            Интерфейс сервиса взаимодествия с коллекциями в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService.GetCollectionAsync(System.Guid,System.Guid,System.Int32)">
            <summary>
            Асинхронный метод получения объектов коллекции
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект результат операции получения объектов коллекции</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService.GetCollectionAsync(System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Асинхронный метод получения объектов коллекции
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="skip">Параметр описывающий какое количество результатов необходимо пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект результат операции получения объектов коллекции</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService.AddLinkAsync(System.Guid,System.Guid,System.Guid)">
            <summary>
            Асинхронный метод добавления ссылки на объект в коллекцию ссылок объекта
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkId">Id объекта для добавления в коллекцию ссылок на объект</param>
            <returns>Добавленный в коллекционный атрибут объект</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService.AddLinkAsync(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Асинхронный метод добавления коллекции ссылок на объект в коллекцию ссылок объекта
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkIdList">Список ссылок на объект для добавления в коллекцию ссылок на объект</param>
            <returns>Коллекция добавленных в коллекционный атрибут объектов</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService.AddObjectAsync(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Асинхронный метод добавления объекта в коллекцию
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="collectionObject">Объект для добавления в коллекцию объектов</param>
            <returns>Добавленный в коллекцию объект</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService.DeleteAsync(System.Guid,System.Guid)">
            <summary>
            Асинхронный метод удаления элемента из коллекции ссылок или объектов
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="collectionObjId">Id объекта в коллекции</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserCollectionService.AddObjectAsync(System.Guid,System.Guid,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод добавления списка объектов в коллекцию объектов в Неосинтез
            </summary>
            <param name="objectId">Id объекта коллекции из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится коллекция в Неосинтез</param>
            <param name="entityId">Id класса коллекции</param>
            <param name="attributes">Коллекция объектов для добавления объекту в Неосинтез</param>
            <returns>Id объекта коллекции</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserElementsService">
            <summary>
            Сервис взаимодействия с API Элементов моделей
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserElementsService.CreateLinksAsync(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Создание связей между элементами 3d и объектами системы.
            </summary>
            <param name="elementIds">Коллекция элементов модели, которые должны быть связаны</param>
            <param name="objectsIds">Коллекция объектов с которыми связываются элементы модели</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserElementsService.GetLinksAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Получение связей между элементами 3d и объектами системы.
            </summary>
            <param name="ids">Список идентификаторов элементов 3d.</param>
            <returns>Контейнер описание связей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserElementsService.DeleteLinksAsync(System.Collections.Generic.IDictionary{System.Int64,System.Collections.Generic.IEnumerable{System.Guid}})">
            <summary>
            Удаление связей между элементами 3d и объектами системы.
            </summary>
            <param name="links">Словарь, в котором ключ - идентификатор элемента 3d, а значение - коллекция идентификаторов объектов системы.</param>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService">
            <summary>
            Интерфейс описывающий работу с объектом в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(System.Guid,System.String,System.Guid)">
            <summary>
            Асинхронный метод создания нового объекта у родительского объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(System.Guid,System.String,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод создания нового объекта у родительского объекта с коллекцией атрибутов объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов объекта</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(System.Guid,System.String,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод создания нового объекта у родительского объекта с атрибутом объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attribute">Атрибут объекта</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(System.String,System.Guid)">
            <summary>
            Асинхронный метод создания нового объекта
            </summary>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(System.String,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод создания нового объекта с коллекцией атрибутов этого объекта
            </summary>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attributes">Коллекция добавляемых атрибутов объекта</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(System.String,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод создания нового объекта с атрибутом этого объекта
            </summary>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attributes">Атрибут для добавления в объект</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Асинхронный метод создания нового объекта
            </summary>
            <param name="neosyntezObject">Объект неосинтез для заведения</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.CreateNewNSObjectAsync(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Асинхронный метод создания нового объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="neosyntezObject">Объект неосинтез для заведения</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetNSObjectAsync(System.Guid)">
            <summary>
            Асинхронный метод получения объекта из Неосинтез
            </summary>
            <param name="objectId">Id объекта для получения</param>
            <returns>Объект из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.ChangeNSObjectClassAsync(System.Guid,System.Guid)">
            <summary>
            Асинхронный метод смены класса объекта
            </summary>
            <param name="objectId">Id объекта класс которого необходимо изменить</param>
            <param name="classId">Id классса</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.ChangeNSObjectParentAsync(System.Guid,System.Guid)">
            <summary>
            Асинхронный метод смены родительского объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="parentId">Id родительского объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.ChangeNSObjectNameAsync(System.Guid,System.String)">
            <summary>
            Асинхронный метод смены имеи объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="name">Имя присваиваемое объекту</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetChildGuidAsync(System.Guid,System.String)">
            <summary>
            Асинхронный метод проверки наличия объекта у родителя
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Имя объекта</param>
            <returns>Коллекция Id объектов </returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetChildGuidsAsync(System.Guid)">
            <summary>
            Асинхронный метод возврата всех детей родительского элемента
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <returns>Коллекция ID дочерних элементов родителя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.ModifyAttributeAsync(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод изменения атрибута объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="attribute">Атрибут</param>
            <returns>Коллекция изменных атрибутов</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.ModifyAttributeAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод изменения атрибутов объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="arrayOfAttributes">Массив атрибутов</param>
            <returns>Коллекция изменных атрибутов</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetNSDictionaryAsync(System.Guid)">
            <summary>
            Асинхронный метод получения справочника из Неосинтез
            </summary>
            <param name="folderId">Id объекта папки хранилища справочников</param>
            <returns>Справочник в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.DeleteObjectAsync(System.Guid)">
            <summary>
            Асинхронный метод удаления объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetChildObjectsAsync(System.Guid)">
            <summary>
            Асинхронный метод получения дерева объектов
            </summary>
            <param name="parentId">Id объекта с которого необходимо начать строить дерево</param>
            <returns>Поддерево элементов извлекаемых из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetChildObjectsAsync(System.Guid,System.Guid)">
            <summary>
            Асинхронный метод получения дерева объектов от указанного объекта до объекта в дереве
            </summary>
            <param name="parentId">Id объекта с которого необходимо начать строить дерево</param>
            <param name="leafId">Id объекта, который является который будет конечным в извлекаемом поддереве</param>
            <returns>Поддерево элементов извлекаемых из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.ContextSearchAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition},System.Int32,System.Int32)">
            <summary>
            Асинхронный метод контекстного описка в объекте Неосинтез
            </summary>
            <param name="objectId">Id объекта в Неосинтез, в котором производится контекстный поиск</param>
            <param name="conditions">Коллекция условий поиска</param>
            <param name="skip">Количество пропускаемых элементов (пагинация)</param>
            <param name="take">Коллекция получаемых элементов (пагинация)</param>
            <returns>Результат контекстного поиска в объекте Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetObjectPermissionsAsync(System.Guid)">
            <summary>
            Асинхронный метод получения разрешений объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <returns>Объект описание разрешений объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.ChangeObjectPermissionsAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.PermissionManagementOperation})">
            <summary>
            Асинхронный метод изменения разрешений на доступ к объекту
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="operation">Объект описание операции изменения разрешений объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetObjectVersionsAsync(System.Guid,System.Int32,System.Int32)">
            <summary>
            Асинхронный метод получения всех версий объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="skip">Количество пропускаемых элементов</param>
            <param name="take">Количество получаемых элементов</param>
            <returns>Все версии объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.GetObjectVersionAsync(System.Guid,System.Int32)">
            <summary>
            Асинхронный метод получения объекта конкретной версии
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="version">Номер версии объекта</param>
            <returns>Конкретная версия объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserObjectService.MakeObjectVersionAsync(System.Guid)">
            <summary>
            Асинхронный метод созания версии объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserSearchService">
            <summary>
            Интерфейс сервиса поиска в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserSearchService.SearchNeosyntezClassAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition},System.Int32,System.Int32)">
            <summary>
            Асинхронный метод поиска в Неосинтез(коллекции параметров)
            </summary>
            <param name="rootIds">Список корневых узлов для поиска</param>
            <param name="classIdList">Список классов для поиска</param>
            <param name="conditions">Список условий поиска</param>
            <param name="skip">Количество объектов которое нужно пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект Result содержащий результат поиска</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserSearchService.SearchNeosyntezClassAsync(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition},System.Int32,System.Int32)">
            <summary>
            Асинхронный метод поиска в Неосинтез
            </summary>
            <param name="rootId">Корневой узел для поиска</param>
            <param name="classId">Класс для поиска</param>
            <param name="conditions">Список условий поиска</param>
            <param name="skip">Количество объектов которое нужно пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект Result содержащий результат поиска</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserSearchService.GetSearchResultObjectAsync(System.String)">
            <summary>
            Метод получения результатов поиска в виде объектов 
            </summary>
            <param name="searchResult">Результат поиска в JObject</param>
            <returns>Объект Result содержащий результат поиска</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork">
            <summary>
            Единица работы для взаимодействия с сервисами пользовательского уровня
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.SearchService">
            <summary>
            Сервис работы с поиском
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.UserAttributeStructure">
            <summary>
            Сервис работы со структурой атрибутов Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.UserObjectCollection">
            <summary>
            Сервис работы с коллекциями Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.UserObjectWork">
            <summary>
            Сервис работы с объектами Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.UserStructure">
            <summary>
            Сервис работы со структурой метаданных Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.ModelsService">
            <summary>
            Сервис для работы с 3D моделями Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.RolesUserService">
            <summary>
             Сервис взаимодействия с ролями 
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.SecurityUserService">
            <summary>
            Сервис взаимодействия с методами работы с пользователем
            </summary>
        </member>
        <member name="P:Client.Domain.Contracts.NeosyntezUserServices.IUserServiceUnitOfWork.PrincipalsService">
            <summary>
            Сервис взаимодействия с методами работы с principals
            </summary>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService">
            <summary>
            Описание работы с мета данными атрибутов в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService.CreateNewGroupAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezGroup)">
            <summary>
            Асинхронный метод создания группы в экземпляре Неосинтез
            </summary>
            <param name="neosyntezGroup">Описание группы в Неосинтез</param>
            <returns>Группу заведенную в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService.CreateNewNeosyntezAttributeAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод создания атрибута в Неосинтез
            </summary>
            <param name="neosyntezAttribute">Описание атрибута в Неосинтез</param>
            <returns>Атрибут заведенный в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService.CreateNewUnitsAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezUnit)">
            <summary>
            Асинхронный метод создания единицы измерения в Неосинтез
            </summary>
            <param name="unit">Описнаие единицы измерения</param>
            <returns>Единица измерения в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService.GetAttributeGroupsAsync">
            <summary>
            Асинхронный метод получения списка групп зарегистрированных в экзмепляре Неосинтез
            </summary>
            <returns>Коллекция групп из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService.GetUnitsAsync">
            <summary>
            Асинхронный метод получения единиц измерения в Неосинтез
            </summary>
            <returns>Коллекция единиц измерения в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService.ChangeAttributeAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод обновления атрибута в Неосинтез
            </summary>
            <param name="neosyntezAttribute">Атрибут в Неосинтез</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureAttributeService.GetAttributesAsync">
            <summary>
            Асинхронный метод получения коллекции атрибутов из Неосинтез
            </summary>
            <returns>Коллекция атрибутов в Неосинтез</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService">
            <summary>
            Интерфейс описывающий взаимодействие с метаданными в Неосинтеза
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.IsNSTypeValidAsync(Client.Domain.Enums.NeosyntezType)">
            <summary>
            Асинхронный метод проверки типа данных на существование в Неосинтез
            </summary>
            <param name="neosytezType">Перечисление типов в Неосинтез</param>
            <returns>Отметка о валдиности типа</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.GetNSAttributeListAsync">
            <summary>
            Асинхронный метод получения доступных аттрибутов в Неосинтез
            </summary>
            <returns>Список всех атрибутов в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.GetNSAttributeListAsync(System.Guid)">
            <summary>
            Асинхронный метод получения доступных аттрибутов для определенного класса в Неосинтез
            </summary>
            <param name="classId">Id класса чьи атрибуты необходимо получить</param>
            <returns>Список всех атрибутов в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.GetAttributeConstraintsAsync(System.Guid)">
            <summary>
            Асинхронный метод получения ограничений для атрибута в Неосинтез
            </summary>
            <param name="attributeId">Id атрибута в Неосинтез</param>
            <returns>Объек содержащий списки ограничений для атрибута</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.CreateNewEntityAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Асинхронный метод создания нового класса в Неосинтез
            </summary>
            <param name="neosyntezClass">Класс для заведения в Неосинтез</param>
            <returns>Класс заведенный в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.ChangeEntityAsync(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Асинхронный метод изменения класса в Неосинтез
            </summary>
            <param name="neosyntezClass">Класс для изменения в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.AddAttributesAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод добавления атрибутов классу в Неосинтез
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.DeleteAttributesAsync(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Асинхронный метод удаления атрибута из класса
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.DeleteEntitiesAsync(System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezClass})">
            <summary>
            Асинхронный метод удаления классов из Неосинтез
            </summary>
            <param name="neosyntezClasses">Коллекция классов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.ChangeAttributeValidationAsync(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Асинхронный метод изменения правил валидации атрибута класса
            </summary>
            <param name="objectId">Id класса</param>
            <param name="attributeId">Id атрибута изменение в котором производим</param>
            <param name="attribute">Атрибут в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.IUserStructureService.GetNeosyntezStructureAsync">
            <summary>
            Асинхронный метод получения структуры Неосинтез
            </summary>
            <returns>Коллекция классов из Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IPrincipalsService.GetPrincipalsAsync">
            <summary>
            Метод получения списка Principal
            </summary>
            <returns>Список Principal в экземпляре Неосинтез</returns>
        </member>
        <member name="T:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService">
            <summary>
            Сервис взаимодействия с ролями
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService.GetRolesAsync">
            <summary>
            Асинхронный метод получения списка ролей
            </summary>
            <returns>Коллекция ролей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService.GetEffectivePermissionsAsync(System.Int32)">
            <summary>
            Асинхронный метод получения разрешений
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService.GetUsersFromRoleAsync(System.Int32)">
            <summary>
            Асинхронный метод получения пользователей относящихся к определённой роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService.AddRoleAsync(Client.Domain.Models.NeosyntezObjects.Security.Role)">
            <summary>
            Асинхронный метод добавления роли
            </summary>
            <param name="role">Роль для добавления</param>
            <returns>Добавленная роль</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService.AddUsersToRoleAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Асинхронный метод добавления пользователей к роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService.DeleteRoleAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Асинхронный метод удаления ролей 
            </summary>
            <param name="ids">Коллекция идентификаторов ролей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IRolesUserService.DeleteUsersFromRoleAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Асинхронный метод удаления пользователей из роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IUserService.GetUserInfoAsync">
            <summary>
            Асинхронный метод получения информации о текущем пользователе
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IUserService.GetUserInfoAsync(System.Int32)">
            <summary>
            Асинхронный метод получения информации о пользователе по Id
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Обобщённая информация о пользователе. NULL если пользователь не найден</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IUserService.GetProfileAsync(System.Int32)">
            <summary>
            Асинхронный метод получения профиля пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Профиль пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IUserService.GetPermissionsAsync(System.Int32)">
            <summary>
            Асинхронный метод получения коллекции разрешений пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IUserService.GetRolesAsync(System.Int32)">
            <summary>
            Асинхронный метод получения ролей пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция ролей пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Security.IUserService.GetUsersAsync">
            <summary>
            Асинхронный метод получения коллекции пользователей экземпляра
            </summary>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserAttributeService.CreateNewGroup(Client.Domain.Models.NeosyntezObjects.NeosyntezGroup)">
            <summary>
            Метод создания группы в экземпляре Неосинтез
            </summary>
            <param name="neosyntezGroup">Описание группы в Неосинтез</param>
            <returns>Группу заведенную в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserAttributeService.CreateNewNeosyntezAttribute(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод создания атрибута в Неосинтез
            </summary>
            <param name="neosyntezAttribute">Описание атрибута в Неосинтез</param>
            <returns>Атрибут заведенный в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserAttributeService.CreateNewUnits(Client.Domain.Models.NeosyntezObjects.NeosyntezUnit)">
            <summary>
            Метод создания единицы измерения в Неосинтез
            </summary>
            <param name="unit">Описнаие единицы измерения</param>
            <returns>Единица измерения в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserAttributeService.GetAttributeGroups">
            <summary>
            Метод получения списка групп зарегистрированных в экзмепляре Неосинтез
            </summary>
            <returns>Коллекция групп из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserAttributeService.GetUnits">
            <summary>
            Метод получения единиц измерения в Неосинтез
            </summary>
            <returns>Коллекция единиц измерения в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserAttributeService.ChangeAttribute(Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод обновления атрибута в Неосинтез
            </summary>
            <param name="neosyntezAttribute">Атрибут в Неосинтез</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserAttributeService.GetAttributes">
            <summary>
            Метод получения коллекции атрибутов из Неосинтез
            </summary>
            <returns>Коллекция атрибутов в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserCollectionService.GetCollection(System.Guid,System.Guid,System.Int32)">
            <summary>
            Метод получения объектов коллекции
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект результат операции получения объектов коллекции</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserCollectionService.GetCollection(System.Guid,System.Guid,System.Int32,System.Int32)">
            <summary>
            Метод получения объектов коллекции
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="skip">Параметр описывающий какое количество результатов необходимо пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект результат операции получения объектов коллекции</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserCollectionService.AddLink(System.Guid,System.Guid,System.Guid)">
            <summary>
            Метод добавления ссылки на объект в коллекцию ссылок объекта
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkId">Id объекта для добавления в коллекцию ссылок на объект</param>
            <returns>Добавленный в коллекционный атрибут объект</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserCollectionService.AddLink(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Метод добавления коллекции ссылок на объект в коллекцию ссылок объекта
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="objectLinkIdList">Список ссылок на объект для добавления в коллекцию ссылок на объект</param>
            <returns>Коллекция добавленных в коллекционный атрибут объектов</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserCollectionService.AddObject(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Метод добавления объекта в коллекцию
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится получаемая коллекция в Неосинтез</param>
            <param name="collectionObject">Объект для добавления в коллекцию объектов</param>
            <returns>Добавленный в коллекцию объект</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserCollectionService.Delete(System.Guid,System.Guid)">
            <summary>
            Метод удаления элемента из коллекции ссылок или объектов
            </summary>
            <param name="objectId">Id объекта коллекцию которого необходимо получить из Неосинтез</param>
            <param name="collectionObjId">Id объекта в коллекции</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserCollectionService.AddObject(System.Guid,System.Guid,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод добавления списка объектов в коллекцию объектов в Неосинтез
            </summary>
            <param name="objectId">Id объекта коллекции из Неосинтез</param>
            <param name="attributeId">Id атрибута в котором находится коллекция в Неосинтез</param>
            <param name="entityId">Id класса коллекции</param>
            <param name="attributes">Коллекция объектов для добавления объекту в Неосинтез</param>
            <returns>Id объекта коллекции</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserElementsService.CreateLinks(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Создание связей между элементами 3d и объектами системы.
            </summary>
            <param name="elementIds">Коллекция элементов модели, которые должны быть связаны</param>
            <param name="objectsIds">Коллекция объектов с которыми связываются элементы модели</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserElementsService.GetLinks(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Получение связей между элементами 3d и объектами системы.
            </summary>
            <param name="ids">Список идентификаторов элементов 3d.</param>
            <returns>Контейнер описание связей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserElementsService.DeleteLinks(System.Collections.Generic.IDictionary{System.Int64,System.Collections.Generic.IEnumerable{System.Guid}})">
            <summary>
            Удаление связей между элементами 3d и объектами системы.
            </summary>
            <param name="links">Словарь, в котором ключ - идентификатор элемента 3d, а значение - коллекция идентификаторов объектов системы.</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserModelService.UploadFiles(Client.Domain.Models.NeosyntezObjects.BaseObject{System.Int64},System.Collections.Generic.IEnumerable{Client.Domain.Contracts.WebApi.IBinaryFileObject})">
            <summary>
            Метод загрузки файлов моделей в Неосинтез
            </summary>
            <param name="neosyntezObject">Объект описание модели в которую будет производится загрузка файлов</param>
            <param name="files">Коллекция файлов для загрузки в модель Неосинтез</param>
            <returns>Коллекция результатов загрузки фалов в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка возникающая в результате проблемы взаимодействия с Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserModelService.GetModelById(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Метод получения объекта 3d модели из экземпляра Неосинтез
            </summary>
            <param name="queryObject">Объект запроса на получение модели из Неосинтез</param>
            <returns>Объект 3D модели Неосинтез или null в случае отсутствия</returns>
            <exception cref="T:System.ArgumentNullException">В случае передачи в параметре значения null или в случае не заполненного поля Id</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserModelService.GetElementsChild(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Метод получения элементов/элемента модели
            </summary>
            <param name="modelId">Идентификатор модели</param>
            <param name="elementId">Идентификатор элемента (опционально)</param>
            <returns>Коллекция элементов модели</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserModelService.IsModelExist(Client.Domain.Models.WorkObjects.QueryObjects.QueryObject{System.Int64})">
            <summary>
            Метод подтверждения существования модели в Неосинтез
            </summary>
            <param name="queryObject">Объект запроса модели из Неосинтез</param>
            <returns>Bool значение описывающее существование запрошеной модели</returns>
            <exception cref="T:System.ArgumentNullException">В случае передачи в параметре значения null или в случае не заполненного поля Id</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(System.Guid,System.String,System.Guid)">
            <summary>
            Метод создания нового объекта у родительского объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(System.Guid,System.String,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод создания нового объекта у родительского объекта с коллекцией атрибутов объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов объекта</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(System.Guid,System.String,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод создания нового объекта у родительского объекта с атрибутом объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attribute">Атрибут объекта</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(System.String,System.Guid)">
            <summary>
            Метод создания нового объекта
            </summary>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(System.String,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод создания нового объекта с коллекцией атрибутов этого объекта
            </summary>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attributes">Коллекция добавляемых атрибутов объекта</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(System.String,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод создания нового объекта с атрибутом этого объекта
            </summary>
            <param name="name">Наименование создаваемого объекта</param>
            <param name="idClass">Id класса создаваемого объекта в Неосинтез</param>
            <param name="attributes">Атрибут для добавления в объект</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Метод создания нового объекта
            </summary>
            <param name="neosyntezObject">Объект неосинтез для заведения</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.CreateNewNSObject(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezObject)">
            <summary>
            Метод создания нового объекта
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="neosyntezObject">Объект неосинтез для заведения</param>
            <returns>Id созданного объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetNSObject(System.Guid)">
            <summary>
            Метод получения объекта из Неосинтез
            </summary>
            <param name="objectId">Id объекта для получения</param>
            <returns>Объект из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.ChangeNSObjectClass(System.Guid,System.Guid)">
            <summary>
            Метод смены класса объекта
            </summary>
            <param name="objectId">Id объекта класс которого необходимо изменить</param>
            <param name="classId">Id классса</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.ChangeNSObjectParent(System.Guid,System.Guid)">
            <summary>
            Метод смены родительского объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="parentId">Id родительского объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.ChangeNSObjectName(System.Guid,System.String)">
            <summary>
            Метод смены имеи объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="name">Имя присваиваемое объекту</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetChildGuid(System.Guid,System.String)">
            <summary>
            Метод проверки наличия объекта у родителя
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <param name="name">Имя объекта</param>
            <returns>Коллекция Id объектов </returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetChildGuids(System.Guid)">
            <summary>
            Метод возврата всех детей родительского элемента
            </summary>
            <param name="parentId">Id родительского объекта</param>
            <returns>Коллекция ID дочерних элементов родителя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.ModifyAttribute(System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод изменения атрибута объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="attribute">Атрибут</param>
            <returns>Коллекция изменных атрибутов</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.ModifyAttribute(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод изменения атрибутов объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="arrayOfAttributes">Массив атрибутов</param>
            <returns>Коллекция изменных атрибутов</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetNSDictionary(System.Guid)">
            <summary>
            Метод получения справочника из Неосинтез
            </summary>
            <param name="folderId">Id объекта папки хранилища справочников</param>
            <returns>Справочник в Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.DeleteObject(System.Guid)">
            <summary>
            Метод удаления объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetChildObjects(System.Guid)">
            <summary>
            Метод получения дерева объектов
            </summary>
            <param name="parentId">Id объекта с которого необходимо начать строить дерево</param>
            <returns>Поддерево элементов извлекаемых из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetChildObjects(System.Guid,System.Guid)">
            <summary>
            Метод получения дерева объектов от указанного объекта до объекта в дереве
            </summary>
            <param name="parentId">Id объекта с которого необходимо начать строить дерево</param>
            <param name="leafId">Id объекта, который является который будет конечным в извлекаемом поддереве</param>
            <returns>Поддерево элементов извлекаемых из Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.ContextSearch(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition},System.Int32,System.Int32)">
            <summary>
            Метод контекстного описка в объекте Неосинтез
            </summary>
            <param name="objectId">Id объекта в Неосинтез, в котором производится контекстный поиск</param>
            <param name="conditions">Коллекция условий поиска</param>
            <param name="skip">Количество пропускаемых элементов (пагинация)</param>
            <param name="take">Коллекция получаемых элементов (пагинация)</param>
            <returns>Результат контекстного поиска в объекте Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetObjectPermissions(System.Guid)">
            <summary>
            Метод получения разрешений объекта
            </summary>
            <param name="objectId">Id объекта</param>
            <returns>Объект описание разрешений объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.ChangeObjectPermissions(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.PermissionManagementOperation})">
            <summary>
            Метод изменения разрешений на доступ к объекту
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="operation">Объект описание операции изменения разрешений объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetObjectVersions(System.Guid,System.Int32,System.Int32)">
            <summary>
            Метод получения всех версий объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="skip">Количество пропускаемых элементов</param>
            <param name="take">Количество получаемых элементов</param>
            <returns>Все версии объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.GetObjectVersion(System.Guid,System.Int32)">
            <summary>
            Асинхронный метод получения объекта конкретной версии
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="version">Номер версии объекта</param>
            <returns>Конкретная версия объекта</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserObjectService.MakeObjectVersion(System.Guid)">
            <summary>
            Асинхронный метод созания версии объекта
            </summary>
            <param name="objectId">Идентификатор объекта</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserSearchService.SearchNeosyntezClass(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition},System.Int32,System.Int32)">
            <summary>
            Метод поиска в Неосинтез(коллекции параметров)
            </summary>
            <param name="rootIds">Список корневых узлов для поиска</param>
            <param name="classIdList">Список классов для поиска</param>
            <param name="conditions">Список условий поиска</param>
            <param name="skip">Количество объектов которое нужно пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект Result содержащий результат поиска</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserSearchService.SearchNeosyntezClass(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition},System.Int32,System.Int32)">
            <summary>
            Метод поиска в Неосинтез
            </summary>
            <param name="rootId">Корневой узел для поиска</param>
            <param name="classId">Класс для поиска</param>
            <param name="conditions">Список условий поиска</param>
            <param name="skip">Количество объектов которое нужно пропустить</param>
            <param name="take">Опциональный параметр описывающий какое количество результатов необходимо получить</param>
            <returns>Объект Result содержащий результат поиска</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.IsNSTypeValid(Client.Domain.Enums.NeosyntezType)">
            <summary>
            Метод проверки типа данных на существование в Неосинтез
            </summary>
            <param name="neosytezType">Перечисление типов в Неосинтез</param>
            <returns>Отметка о валдиности типа</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.GetNSAttributeList">
            <summary>
            Метод получения доступных аттрибутов в Неосинтез
            </summary>
            <returns>Список всех атрибутов в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.GetNSAttributeList(System.Guid)">
            <summary>
            Метод получения доступных аттрибутов для определенного класса в Неосинтез
            </summary>
            <param name="classId">Id класса чьи атрибуты необходимо получить</param>
            <returns>Список всех атрибутов в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.GetAttributeConstraints(System.Guid)">
            <summary>
            Метод получения ограничений для атрибута в Неосинтез
            </summary>
            <param name="attributeId">Id атрибута в Неосинтез</param>
            <returns>Объек содержащий списки ограничений для атрибута</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.CreateNewEntity(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Метод создания нового класса в Неосинтез
            </summary>
            <param name="neosyntezClass">Класс для заведения в Неосинтез</param>
            <returns>Класс заведенный в Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.ChangeEntity(Client.Domain.Models.NeosyntezObjects.NeosyntezClass)">
            <summary>
            Метод изменения класса в Неосинтез
            </summary>
            <param name="neosyntezClass">Класс для изменения в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.AddAttributes(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод добавления атрибутов классу в Неосинтез
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.DeleteAttributes(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Метод удаления атрибута из класса
            </summary>
            <param name="objectId">Id объекта в Неосинтез</param>
            <param name="attributes">Коллекция атрибутов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.DeleteEntities(System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezClass})">
            <summary>
            Метод удаления классов из Неосинтез
            </summary>
            <param name="neosyntezClasses">Коллекция классов для удаления</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.ChangeAttributeValidation(System.Guid,System.Guid,Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute)">
            <summary>
            Метод изменения правил валидации атрибута класса
            </summary>
            <param name="objectId">Id класса</param>
            <param name="attributeId">Id атрибута изменение в котором производим</param>
            <param name="attribute">Атрибут в Неосинтез</param>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.ISyncUserStructureService.GetNeosyntezStructure">
            <summary>
            Метод получения структуры Неосинтез
            </summary>
            <returns>Коллекция классов из Неосинтез</returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncPrincipalsService.GetPrincipals">
            <summary>
            Метод получения списка Principal
            </summary>
            <returns>Список Principal в экземпляре Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncRolesUserService.GetRoles">
            <summary>
            Метод получения списка ролей
            </summary>
            <returns>Коллекция ролей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncRolesUserService.GetEffectivePermissions(System.Int32)">
            <summary>
            Метод получения разрешений
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncRolesUserService.GetUsersFromRole(System.Int32)">
            <summary>
            Метод получения пользователей относящихся к определённой роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncRolesUserService.AddRole(Client.Domain.Models.NeosyntezObjects.Security.Role)">
            <summary>
            Метод добавления роли
            </summary>
            <param name="role">Роль для добавления</param>
            <returns>Добавленная роль</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncRolesUserService.AddUsersToRole(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Метод добавления пользователей к роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncRolesUserService.DeleteRole(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Метод удаления ролей 
            </summary>
            <param name="ids">Коллекция идентификаторов ролей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncRolesUserService.DeleteUsersFromRole(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Метод удаления пользователей из роли
            </summary>
            <param name="roleId">Идентификатор роли</param>
            <param name="userIds">Коллекция идентификаторов пользователей</param>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncUserService.GetUserInfo">
            <summary>
            Метод получения информации о текущем пользователе
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncUserService.GetUserInfo(System.Int32)">
            <summary>
            Метод получения информации о пользователе по Id
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Обобщённая информация о пользователе. NULL если пользователь не найден</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncUserService.GetProfile(System.Int32)">
            <summary>
            Метод получения профиля пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Профиль пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncUserService.GetPermissions(System.Int32)">
            <summary>
            Метод получения коллекции разрешений пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция разрешений пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncUserService.GetRoles(System.Int32)">
            <summary>
            Метод получения ролей пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Коллекция ролей пользователя</returns>
        </member>
        <member name="M:Client.Domain.Contracts.NeosyntezUserServices.Sync.Security.ISyncUserService.GetUsers">
            <summary>
            Метод получения коллекции пользователей экземпляра
            </summary>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="T:Client.Domain.Contracts.QueryObject.IQueryObject`1">
            <summary>
            
            </summary>
            <typeparam name="IdType"></typeparam>
        </member>
        <member name="T:Client.Domain.Contracts.WebApi.IBinaryFileObject">
            <summary>
            Описание объекта передачи файла полученного из Неосинтез
            </summary>
        </member>
        <member name="T:Client.Domain.Contracts.WebApi.IWebRequestService">
            <summary>
            Сервис для работы с запросами к Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Contracts.WebApi.IWebRequestService.GetRequestAsync(System.String)">
            <summary>
            Метод работы с Get запросом
            </summary>
            <param name="address">Адрес сервиса</param>
            <returns></returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.WebApi.IWebRequestService.UploadAsync(Client.Domain.Contracts.WebApi.IBinaryFileObject,System.String)">
            <summary>
            Метод работы с загрузкой файла
            </summary>
            <param name="file">Бинарный файл</param>
            <param name="address">Адрес сервиса</param>
            <returns>Ответ от сервиса загрузки файла</returns>
        </member>
        <member name="M:Client.Domain.Contracts.WebApi.IWebRequestService.GetBinaryAsync(System.String)">
            <summary>
            Метод работы с получением файла
            </summary>
            <param name="address">Адрес сервиса</param>
            <returns>Объект файла</returns>
        </member>
        <member name="M:Client.Domain.Contracts.WebApi.IWebRequestService.PutRequestAsync(System.String,System.String)">
            <summary>
            Метод работы с запросом Put
            </summary>
            <param name="json">Сериализованный JSON</param>
            <param name="address">Адрес сервиса</param>
            <returns></returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.WebApi.IWebRequestService.DeleteRequestAsync(System.String)">
            <summary>
            Метод работы с запросом Delete
            </summary>
            <param name="address">Адрес сервиса</param>
            <returns></returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="M:Client.Domain.Contracts.WebApi.IWebRequestService.PostRequestAsync(System.String,System.String,Client.Domain.Enums.OverrideTypes)">
            <summary>
            Метод работы с запросом POST
            </summary>
            <param name="json">Сериализованный JSON</param>
            <param name="address">Адрес сервиса</param>
            <param name="overrideTypes">Значение перечисления переопределения заголовка HTTP</param>
            <returns></returns>
            <exception cref="T:Client.Domain.Models.NeosyntezHttpException">Ошибка HTTP обращения к API Неосинтез</exception>
        </member>
        <member name="T:Client.Domain.Enums.NeosyntezType">
            <summary>
            Типы в Неосинтез
            </summary>
        </member>
        <member name="T:Client.Domain.Enums.OverrideTypes">
            <summary>
            Перечисление для описание заголовка HTTP
            </summary>
        </member>
        <member name="F:Client.Domain.Enums.OverrideTypes.MethodNotOverride">
            <summary>
            Переопределение отсутствует
            </summary>
        </member>
        <member name="F:Client.Domain.Enums.OverrideTypes.MethodOverrideDelete">
            <summary>
            Переопределение метода Delete
            </summary>
        </member>
        <member name="F:Client.Domain.Enums.OverrideTypes.MethodOverrideGet">
            <summary>
            Переопределение метода Get
            </summary>
        </member>
        <member name="F:Client.Domain.Enums.SearchMode.Actual">
            <summary>
            Поиск актуальных объектов
            </summary>
        </member>
        <member name="F:Client.Domain.Enums.SearchMode.ArchiveAndActual">
            <summary>
            Архивные и актуальные
            </summary>
        </member>
        <member name="F:Client.Domain.Enums.SearchMode.Archive">
            <summary>
            Архивные
            </summary>
        </member>
        <member name="M:Client.Domain.Models.Autorization.AccessToken.CreateBearerToken(System.String)">
            <summary>
            Фабричный метод создания модели токена доступа
            </summary>
            <param name="tokenValue">Токен доступа</param>
            <returns>Модель токена доступа</returns>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.BaseObject`1">
            <summary>
            Объект Неосинтеза
            </summary>
            <typeparam name="TId">Тип описывающий Id объекта Неосинтез</typeparam>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.BaseObject`1.Id">
            <summary>
            Id объекта Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.BaseObject`1.Name">
            <summary>
            Наименование объекта
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.BaseObject`1.Description">
            <summary>
            Описание объекта
            </summary>
        </member>
        <member name="M:Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute.CreateNeosyntezAttribute(System.String,Client.Domain.Enums.NeosyntezType,System.String)">
            <summary>
            Фабричный метод создания простого атрибута класса Неосинтез без ограничений
            </summary>
            <param name="name">Имя атрибута, обязательный параметр</param>
            <param name="type">Тип атрибута</param>
            <returns>Новый атрибут класса Неосинтез</returns>
            <exception cref="T:System.ArgumentException">Не передано имя создаваемого объекта</exception>
        </member>
        <member name="M:Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute.CreateNeosyntezAttribute(System.String,Client.Domain.Enums.NeosyntezType,Client.Domain.Models.WorkObjects.Objects.ConstraintResult,System.String)">
            <summary>
            Фабричный метод создания ссылочного атрибута класса Неосинтез
            </summary>
            <param name="name">Имя атрибута, обязательный параметр</param>
            <param name="type">Тип атрибута</param>
            <param name="constraints">Ограничения задаваемые для ссылочного атрибута</param>
            <returns>Ссылочный атрибут класса Неосинтез</returns>
            <exception cref="T:System.ArgumentException">Параметр не прошел первичную проверку</exception>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1">
            <summary>
            Объект Неосинтез для получения объектов связанных между собой
            </summary>
            <typeparam name="IdType">Тип Id объекта</typeparam>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.NodeType">
            <summary>
            Права доступа к объекту
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.EffectivePermissions">
            <summary>
            Права доступа к объекту
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.ContentType">
            <summary>
            Тип контента объекта (для объектов моделей)
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.Icon">
            <summary>
            Изображение объекта
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.HasFiles">
            <summary>
            Флаг указывающий на существование прикрепленного файла в модели (для объектов моделей)
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.Level">
            <summary>
            Уровень вложенности объекта
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.HasChildren">
            <summary>
            Флаг указывающий на существование объектов-детей у объекта
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezChildObject`1.Children">
            <summary>
            Коллекция объектов-детей текущего объекта
            </summary>
        </member>
        <member name="M:Client.Domain.Models.NeosyntezObjects.NeosyntezClass.CreateNeosyntezClass(System.String,System.String)">
            <summary>
            Фабричный метод создания класса 
            </summary>
            <param name="name">Имя класса</param>
            <param name="description">Пояснение к классу</param>
            <returns>Новый класс Неосинтез</returns>
            <exception cref="T:System.ArgumentException">Не передано имя класса, имя является обязательным полем</exception>
        </member>
        <member name="M:Client.Domain.Models.NeosyntezObjects.NeosyntezGroup.CreateInstance(System.String,System.String)">
            <summary>
            Фабричный метод создания группы атрибута
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <exception cref="T:System.ArgumentException">Не передано имя, имя является обязательным параметром</exception>
            <returns>Группа атрибута класса</returns>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezModel.Children">
            <summary>
            Коллекция объектов-детей текущего объекта
            </summary>
        </member>
        <member name="M:Client.Domain.Models.NeosyntezObjects.NeosyntezObject.CreateNewNeosyntezObject(System.String,System.Guid)">
            <summary>
            Фабричный метод создания нового объекта в Неосинтез
            </summary>
            <param name="name">Имя объекта (длинна имени ограничена 450 символами)</param>
            <param name="idClass">Идентификатор класса объекта</param>
            <returns>Новый объект Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Models.NeosyntezObjects.NeosyntezObject.CreateNewCollectionObject(System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.NeosyntezObjects.NeosyntezAttribute})">
            <summary>
            Фабричный метод создания коллекции
            </summary>
            <param name="entityId">Id класса коллекции атрибутов</param>
            <param name="neosyntezAttributes">Коллекция атрибутов</param>
            <returns>Объект коллекции Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Models.NeosyntezObjects.NeosyntezUnit.CreateInstance(System.String,System.String)">
            <summary>
            Фабричный метод создания единицы измерения Неосинтез
            </summary>
            <param name="name">Имя единицы измерения Неосинтез (обязательный параметр)</param>
            <param name="description">Появнение к единице измерения</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Не передано имя, имя является обязательным параметром</exception>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.NeosyntezUser">
            <summary>
            Пользователь Неосинтез
            </summary>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.NeosyntezUserInfo">
            <summary>
            Информация о пользователе Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezUserInfo.Id">
            <summary>
            Идентификатор пользователя
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezUserInfo.UserName">
            <summary>
            Логин пользователя
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezUserInfo.Roles">
            <summary>
            Коллекция ролей пользователя
            </summary>
        </member>
        <member name="P:Client.Domain.Models.NeosyntezObjects.NeosyntezUserInfo.Profile">
            <summary>
            Профиль пользователя (общие данные)
            </summary>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.Security.Permission">
            <summary>
            Vjltkm hfphtitybz
            </summary>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.Security.Role">
            <summary>
            Роль
            </summary>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.Security.User">
            <summary>
            Модель пользователя
            </summary>
        </member>
        <member name="T:Client.Domain.Models.NeosyntezObjects.UserProfile">
            <summary>
            Профиль пользователя Неосинтез
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.BinaryFileObject">
            <summary>
            Класс контейнера файла полученного из Неосинтез
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.ChangedObject`2">
            <summary>
            Объект для передачи существующего изменного объекта Неосинтез
            </summary>
            <typeparam name="IDType">Параметр описывающий тип Id объекта</typeparam>
            <typeparam name="ObjectType">Параметр описывающий тип передаваемого объекта</typeparam>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.ChangedObject`2.Id">
            <summary>
            Идентификатор существующего объекта
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.ChangedObject`2.ParentId">
            <summary>
            Идентификатор родителя объекта
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.ChangedObject`2.TransportedObject">
            <summary>
            Передаваемый объект для изменения в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.ChangedObject`2.#ctor(`0,`1)">
            <summary>
            Конструктор транспортного объекта
            </summary>
            <param name="id">Идентификатор существующего объекта</param>
            <param name="object">Передаваемый объект для изменения в Неосинтез</param>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.ChangedObject`2.#ctor(`0,System.Nullable{`0},`1)">
            <summary>
            Конструктор транспортного объекта
            </summary>
            <param name="id">Идентификатор существующего объекта</param>
            <param name="parentId">Идентификатор родителя объекта</param>
            <param name="object">Передававемый объект для изменения в Неосинтез</param>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.CollectionAddResultObject.ObJectId">
            <summary>
            Id объекта в коллекции ссылок
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.CollectionAddResultObject.ReferenceId">
            <summary>
            Id ссылки в коллекции ссылок
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.CollectionObject.Object">
            <summary>
            Объект коллекции
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.CollectionObject.ReferenceId">
            <summary>
            Идентификатор ссылки на объект
            </summary>
            <remarks>
            Используется в работе с элементами коллекции (в CRUD операциях)
            </remarks>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.CollectionResult">
            <summary>
            Результат получения элементов коллекции
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.CollectionResult.Total">
            <summary>
            Общее число элементов в коллекции
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.CollectionResult.Result">
            <summary>
            Результат операции получения коллекции
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.ConstraintResult">
            <summary>
            Класс описывающий результат получения ограничения атрибута
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.ConstraintResult.EntityConstraints">
            <summary>
            Список ограничений по классу объекта
            </summary>
            <value>NeosyntezType</value>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.ConstraintResult.ObjectRootConstraints">
            <summary>
            Список ограничений по корню объекта
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.EntityConstraint">
            <summary>
            Класс ограничения по классу
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.EntityConstraint.ConstraintType">
            <summary>
            Тип ограничения
            </summary>
            <value></value>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.EntityConstraint.EntityId">
            <summary>
            Id класса ограничения
            </summary>
            <value></value>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Objects.EntityConstraint.CreateConstraint(System.Guid,Client.Domain.Enums.ConstraintType)">
            <summary>
            Фабричный метод создания ограничения по классу объекта
            </summary>
            <param name="entityId">Идентификатор класса ограничения</param>
            <param name="constraintType">Тип ограничения (опциональный параметр)</param>
            <returns></returns>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.FileResponseObject">
            <summary>
            Объект описание ответа загрузки файла
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.FileResponseObject.Upload">
            <summary>
            Объект загрузки файла
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.FileResponseObject.Analysis">
            <summary>
            Анализ загрузки файла
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.ObjectRootConstraint">
            <summary>
            Класс ограничения по узлу
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.ObjectRootConstraint.ObjectRootId">
            <summary>
            Id ограничения
            </summary>
            <value></value>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.ObjectRootConstraint.ObjectRootType">
            <summary>
            Тип ограничения
            </summary>
            <value></value>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Objects.ObjectRootConstraint.CreateObjectRootConstraint(System.Guid,Client.Domain.Enums.ConstraintType)">
            <summary>
            Фабричный метод создания ограничения по объекту
            </summary>
            <param name="objectRootId">Идентификатор корневого объекта</param>
            <param name="constraintType">Тип ограничения (опциональный параметр)</param>
            <returns>Ограничение по корневому элементу</returns>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.StorageObject">
            <summary>
            Объект описание storage в upload
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.StorageObject.Length">
            <summary>
            Длинна представленного файла в upload
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.UploadObject">
            <summary>
            Объект описание процесса загрузки файлов в Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.UploadObject.Model">
            <summary>
            Объект модель загрузки
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.UploadObject.Step">
            <summary>
            Шаг процесса загрузки
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Objects.UploadObject.Storage">
            <summary>
            Объект хранилище
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Objects.Viewer">
            <summary>
            Модель описывающая сущность вьювера
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.QueryObjects.BinaryQueryObject`1">
            <summary>
            Объект запроса на получение файла из Неосинтез
            </summary>
            <typeparam name="IdType"></typeparam>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.QueryObjects.BinaryQueryObject`1.ContentId">
            <summary>
            Id контента файла в Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.QueryObjects.BinaryQueryObject`1.ModelId">
            <summary>
            Id модели в Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.QueryObjects.BinaryQueryObject`1.#ctor(`0,System.Guid)">
            <summary>
            Конструктор запроса получения файлов запроса
            </summary>
            <param name="modelId">Id модели в Неосинтез</param>
            <param name="contentId">Id контента файла в Неосинтез</param>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.QueryObjects.ModelQueryObject">
            <summary>
            Запрос в Неосинтез для получения объекта 3D модели
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.QueryObjects.ModelQueryObject.Id">
            <summary>
            Id модели (значение может быть null)
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.QueryObjects.ModelQueryObject.LeafId">
            <summary>
            Id дочернего элемента (знчение может быть null)
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.QueryObjects.ModelQueryObject.DemandHasFiles">
            <summary>
            Флаг указывающий на необходимость добавления поля HasFiles в результат операции (значение может быть null)
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.QueryObjects.ModelQueryObject.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Конструктор транспортного объекта запроса модели
            </summary>
            <param name="id">Id модели</param>
            <param name="leafId">Id дочернего элемента (знчение может быть null)</param>
            <param name="demandHasFiles">Флаг указывающий на необходимость добавления поля HasFiles в результат операции (значение может быть null)</param>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.QueryObjects.QueryObject`1">
            <summary>
            Объект запроса в Неосинтез
            </summary>
            <typeparam name="IdType">Тип Id ключа запроса в Неосинтез</typeparam>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.QueryObjects.QueryObject`1.Id">
            <summary>
            Id объекта в запросе
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.QueryObjects.QueryObject`1.Name">
            <summary>
            Имя объекта в запросе (опциональный параметр)
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.QueryObjects.QueryObject`1.#ctor(System.Nullable{`0},System.String)">
            <summary>
            Конструктор класса запроса
            </summary>
            <param name="id">Id объекта в запросе</param>
            <param name="name">Имя объекта в запросе (опциональный параметр)</param>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Search.Condition">
            <summary>
            Условие поиска
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.#ctor(Client.Domain.Enums.SearchCondition,Client.Domain.Enums.SearchOperator,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32},System.String,System.Nullable{System.Guid})">
            <summary>
            Конструктор объекта условия атрибутного поиска в объектах Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.#ctor(Client.Domain.Enums.SearchCondition,Client.Domain.Enums.SearchOperator,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32},System.String,System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Конструктор объекта условия контекстного атрибутного поиска в объектах Неосинтез
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.#ctor(System.Boolean,System.String)">
            <summary>
            Конструктор объекта условия контекстного поиска в объекте Неосинтез
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Type">
            <summary>
            Тип условия
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Operator">
            <summary>
            Оператор объединения условий
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Logic">
            <summary>
            Логичская операция для нескольких условий
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Conditions">
            <summary>
            Список подусловий
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Group">
            <summary>
            Группировка условий
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Contextual">
            <summary>
            Флаг, является ли поиск контекстным
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Value">
            <summary>
            Значение условия
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Direction">
            <summary>
            Направление (необходимость поля требует уточнения)
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Condition.Attribute">
            <summary>
            Атрибут условия
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.GetAttributeCondition(System.Guid,Client.Domain.Enums.SearchOperator,System.String,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32})">
            <summary>
            Создание условия с обязательными для атрибутного поиска полями
            </summary>
            <param name="searchAttributeId">Идентификатор атрибута по которому будет производится поиск (Обязательный параметр)</param>
            <param name="searchOperator">Оператор для поиска значения (Обязательный параметр)</param>
            <param name="attributeValue">Значение для поиска, если присутсвует (опциональный параметр)</param>
            <param name="logic">Логика условия, используется если условий несколько (опциональный параметр)</param>
            <param name="group">Идентификатор группы условий, используется если условий несколько (опциональный параметр)</param>
            <returns>Условие поиска для поиска по атрибутам объекта Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.GetAttributeCondition(System.Guid,Client.Domain.Enums.SearchOperator,System.Guid,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Создание условия с обязательными для атрибутного контекстного поиска полями
            </summary>
            <param name="searchAttributeId">Идентификатор атрибута по которому будет производится поиск (Обязательный параметр)</param>
            <param name="searchOperator">Оператор для поиска значения (Обязательный параметр)</param>
            <param name="attributeValue">Идентификатор атрибута для контекстного поиска (необходимо использовать атрибут имеющийся у объекта Неосинтез)</param>
            <param name="logic">Логика условия, используется если условий несколько (опциональный параметр)</param>
            <param name="group">Идентификатор группы условий, используется если условий несколько (опциональный параметр)</param>
            <param name="isContextual">Флаг контекстного поиска true если поиск контекстный, null если поиск не контекстный (опциональный параметр)</param>
            <returns>Условие поиска для поиска по атрибутам объекта Неосинтез</returns>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.GetValueCondition(Client.Domain.Enums.SearchCondition,Client.Domain.Enums.SearchOperator,System.String,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32})">
            <summary>
            Создание условия с обязательными для поиска по значению полями
            </summary>
            <param name="type">Тип условия (Обязательный параметр)</param>
            <param name="searchOperator">Оператор для поиска значения (Обязательный параметр)</param>
            <param name="value">Значение для поиска (обязательный параметр)</param>
            <param name="logic">Логика условия, используется если условий несколько (опциональный параметр)</param>
            <param name="group">Идентификатор группы условий, используется если условий несколько (опциональный параметр)</param>
            <returns>Условие с обязательными для поиска по значению полями</returns>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.GetValueCondition(Client.Domain.Enums.SearchCondition,Client.Domain.Enums.SearchOperator,System.String,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Создание условия с обязательными для контекстного поиска по значению полями
            </summary>
            <param name="type">Тип условия (Обязательный параметр)</param>
            <param name="searchOperator">Оператор для поиска значения (Обязательный параметр)</param>
            <param name="value">Значение для поиска (обязательный параметр)</param>
            <param name="logic">Логика условия, используется если условий несколько (опциональный параметр)</param>
            <param name="group">Идентификатор группы условий, используется если условий несколько (опциональный параметр)</param>
            <param name="isContextual">Флаг контекстного поиска true если поиск контекстный, null если поиск не контекстный (опциональный параметр)</param>
            <returns>Условие с обязательными для контекстного поиска по значению полями</returns>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.GetNameCondition(Client.Domain.Enums.SearchOperator,System.String,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32})">
            <summary>
            Создание условия с обязательными для поиска по значению наименования объекта полями 
            </summary>
            <param name="searchOperator">Оператор для поиска значения (Обязательный параметр)</param>
            <param name="value">Значение для поиска (обязательный параметр)</param>
            <param name="logic">Логика условия, используется если условий несколько (опциональный параметр)</param>
            <param name="group">Идентификатор группы условий, используется если условий несколько (опциональный параметр)</param>
            <returns>Условие с обязательными для поиска по значению наименования объекта полями</returns>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Condition.GetNameCondition(Client.Domain.Enums.SearchOperator,System.String,Client.Domain.Enums.ConditionLogic,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Создание условия с обязательными для поиска по значению наименования объекта полями в контекстном поиске
            </summary>
            <param name="searchOperator">Оператор для поиска значения (Обязательный параметр)</param>
            <param name="value">Значение для поиска (обязательный параметр)</param>
            <param name="logic">Логика условия, используется если условий несколько (опциональный параметр)</param>
            <param name="group">Идентификатор группы условий, используется если условий несколько (опциональный параметр)</param>
            <param name="isContextual">Флаг контекстного поиска true если поиск контекстный, null если поиск не контекстный (опциональный параметр)</param>
            <returns>Условие с обязательными для поиска по значению наименования объекта полями в контекстном поиске</returns>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Search.Criteria">
            <summary>
            Критерий поиска для поискового запроса
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Criteria.Filters">
            <summary>
            Коллекция фильтров поискового запроса
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Criteria.Conditions">
            <summary>
            Коллекция условий поискового запроса
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Criteria.Mode">
            <summary>
            Вид выбираемых объектов
            </summary>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Criteria.CreateSearchObject(System.Guid,System.Guid,System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition})">
            <summary>
            Фабричный метод создания поискового запроса
            </summary>
            <param name="rootId">Корневой элемент поиска</param>
            <param name="classId">Класс элемента</param>
            <param name="conditions">Условия поиска</param>
            <returns>Поисковый запрос</returns>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Criteria.CreateSearchObject(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition})">
            <summary>
            Фабричный метод создания поискового запроса из коллекции элементов
            </summary>
            <param name="rootIds">Коллекция корневых элементов поиска</param>
            <param name="classIdList">Классы элементов</param>
            <param name="conditions">Условия поиска</param>
            <returns>Поисковый запрос</returns>
        </member>
        <member name="M:Client.Domain.Models.WorkObjects.Search.Criteria.CreateSearchObject(System.Collections.Generic.IEnumerable{Client.Domain.Models.WorkObjects.Search.Condition})">
            <summary>
            Фабричный метод создания запроса для контекстного поиска
            </summary>
            <param name="conditions">Коллекция условий поиска</param>
            <returns>Поисковый запрос</returns>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Search.Filter">
            <summary>
            Фильтр поиска
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Filter.Type">
            <summary>
            Тип поискового фильтра
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.Filter.Value">
            <summary>
            Значение фильтра
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Search.QueryResult">
            <summary>
            Описание ответа на поисковый запрос
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.QueryShapingResult`1.Total">
            <summary>
            Общее количество результатов в ответе.
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.QueryShapingResult`1.Result">
            <summary>
            Результат операции поиска
            </summary>
        </member>
        <member name="T:Client.Domain.Models.WorkObjects.Search.SearchResult">
            <summary>
            Описание результата поиска
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.SearchResult.Object">
            <summary>
            Объект результат поискового запроса
            </summary>
        </member>
        <member name="P:Client.Domain.Models.WorkObjects.Search.SearchResult.Parent">
            <summary>
            Родитель объекта поискового запроса
            </summary>
        </member>
    </members>
</doc>
